<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0822.2038                               -->
<workbook source-build='2021.3.0 (20213.21.0822.2038)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <CascadingFilters />
    <CollapsiblePane />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Search Country' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
    </datasource>
    <datasource inline='true' name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection name='hyper_0'>
            <connection access_mode='readwrite' authentication='auth-username-password' author-locale='en_US' class='hyper' database-persistence='' dbname='C:/Users/chery/Documents/My Tableau Prep Repository/Datasources/Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc.hyper' default-settings='yes' output-to-hyper-file='yes' prep-protocol-role=':prep-protocol-writer' schema='Extract' sslmode='' tablename='Extract' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='CGD - COVID education policy tracking' name='excel-direct.1cuysby1do83zy123gfjy0hl1taw'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:/Lessons/Semester 4/Intro to Data Analytics/Assignment/Education Covid 19 datasets/CGD - COVID education policy tracking.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='CGD - COVID education policy tracking (2)' name='excel-direct.1jeshqe16gy54l0zwqwy20q3x82e'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:/Lessons/Semester 4/Intro to Data Analytics/Assignment/Education Covid 19 datasets/CGD - COVID education policy tracking.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Decision Safety Test' name='excel-direct.058d5v20qbrnwx17ya1cv11xbr2a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Lessons/Semester 4/Intro to Data Analytics/Decision Safety Test.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper_0' name='Extract' table='[Extract].[Extract]' type='table'>
          <columns prep-output-type='outputOperationTypeCreate' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='hyper_0' name='Extract' table='[Extract].[Extract]' type='table'>
            <columns prep-output-type='outputOperationTypeCreate' />
          </relation>
          <relation connection='excel-direct.1jeshqe16gy54l0zwqwy20q3x82e' name='School closure tracker- Global' table='[&apos;School closure tracker- Global$&apos;]' type='table'>
            <columns gridOrigin='A2:AV220:no:A2:AV220:1' lost='0' outcome='1' processed='1044'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
              <column datatype='string' name='Income Group' ordinal='3' />
              <column datatype='string' name='School Closures' ordinal='4' />
              <column datatype='date' name='As of' ordinal='5' />
              <column datatype='date' name='Date' ordinal='6' />
              <column datatype='integer' name='Number of confirmed cases at time of closure' ordinal='7' />
              <column datatype='string' name='Planned Reopening' ordinal='8' />
              <column datatype='string' name='Planned Length of Closure (Weeks)' ordinal='9' />
              <column datatype='string' name='Closure extended?' ordinal='10' />
              <column datatype='string' name='Planned re-opening 2' ordinal='11' />
              <column datatype='string' name='Details of closure' ordinal='12' />
              <column datatype='string' name='Reopening process started (Y/N/School year ended/Never closed)' ordinal='13' />
              <column datatype='date' name='Date reopening process started' ordinal='14' />
              <column datatype='integer' name='Number of cases at re-opening' ordinal='15' />
              <column datatype='string' name='Total Weeks closed' ordinal='16' />
              <column datatype='string' name='Details of re-opening' ordinal='17' />
              <column datatype='string' name='Remote/online tuition?' ordinal='18' />
              <column datatype='string' name='Any distance learning?' ordinal='19' />
              <column datatype='string' name='Online' ordinal='20' />
              <column datatype='string' name='Radio' ordinal='21' />
              <column datatype='string' name='TV' ordinal='22' />
              <column datatype='string' name='Sending work home with students / providing hardcopies of materials' ordinal='23' />
              <column datatype='string' name='Distance curriculum available in multiple languages?' ordinal='24' />
              <column datatype='string' name='Details of language of materials' ordinal='25' />
              <column datatype='string' name='Parent guide?' ordinal='26' />
              <column datatype='string' name='Details of parent guidance' ordinal='27' />
              <column datatype='string' name='Education Emergency Plan?' ordinal='28' />
              <column datatype='string' name='National exams impacted? (Y/N)' ordinal='29' />
              <column datatype='string' name='National exams impacted? (Detail)' ordinal='30' />
              <column datatype='string' name='National exams impact (went ahead/ cancelled/postponed/ Planned for 2020/ held in new format/ by prior assessment)' ordinal='31' />
              <column datatype='string' name='Is exam impact dependent on grade level? (Y/N)' ordinal='32' />
              <column datatype='string' name='Plans for Special Education? (Y/N)' ordinal='33' />
              <column datatype='string' name='Special Education detail' ordinal='34' />
              <column datatype='string' name='Broader workplace closures?' ordinal='35' />
              <column datatype='string' name='Existing Cash Transfer Supplemented?' ordinal='36' />
              <column datatype='string' name='Details of Cash Transfer / social proection program' ordinal='37' />
              <column datatype='string' name='Other supports - Childcare' ordinal='38' />
              <column datatype='string' name='Other supports - Childcare (Detail)' ordinal='39' />
              <column datatype='string' name='Other supports - Meals' ordinal='40' />
              <column datatype='string' name='Other supports - Meals (Details)' ordinal='41' />
              <column datatype='string' name='Other supports - Other' ordinal='42' />
              <column datatype='string' name='Source' ordinal='43' />
              <column datatype='string' name='Source 1' ordinal='44' />
              <column datatype='string' name='Facebook Page' ordinal='45' />
              <column datatype='string' name='Official COVID Education Policy Document' ordinal='46' />
              <column datatype='string' name='Source for Re-opening' ordinal='47' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Any distance learning? (School closure tracker- Global)]' value='[School closure tracker- Global].[Any distance learning?]' />
          <map key='[Any distance learning?]' value='[Extract].[Any distance learning?]' />
          <map key='[As of (School closure tracker- Global)]' value='[School closure tracker- Global].[As of]' />
          <map key='[Broader workplace closures?]' value='[School closure tracker- Global].[Broader workplace closures?]' />
          <map key='[Closure extended?]' value='[School closure tracker- Global].[Closure extended?]' />
          <map key='[Code (School closure tracker- Global)]' value='[School closure tracker- Global].[Code]' />
          <map key='[Code]' value='[Extract].[Code]' />
          <map key='[Country (School closure tracker- Global)]' value='[School closure tracker- Global].[Country]' />
          <map key='[Country]' value='[Extract].[Country]' />
          <map key='[Date (School closure tracker- Global)]' value='[School closure tracker- Global].[Date]' />
          <map key='[Date of latest update]' value='[Extract].[Date of latest update]' />
          <map key='[Date reopening process started]' value='[School closure tracker- Global].[Date reopening process started]' />
          <map key='[Date]' value='[Extract].[Date]' />
          <map key='[Details of Cash Transfer / social proection program]' value='[School closure tracker- Global].[Details of Cash Transfer / social proection program]' />
          <map key='[Details of closure]' value='[School closure tracker- Global].[Details of closure]' />
          <map key='[Details of language of materials]' value='[School closure tracker- Global].[Details of language of materials]' />
          <map key='[Details of parent guidance]' value='[School closure tracker- Global].[Details of parent guidance]' />
          <map key='[Details of re-opening]' value='[School closure tracker- Global].[Details of re-opening]' />
          <map key='[Difference of cases between re-opening and time of closure (Normalized)]' value='[Extract].[Difference of cases between re-opening and time of closure (Normalized)]' />
          <map key='[Difference of cases between re-opening and time of closure (Rounded)]' value='[Extract].[Difference of cases between re-opening and time of closure (Rounded)]' />
          <map key='[Difference of cases between re-opening and time of closure]' value='[Extract].[Difference of cases between re-opening and time of closure]' />
          <map key='[Distance curriculum available in multiple languages?]' value='[School closure tracker- Global].[Distance curriculum available in multiple languages?]' />
          <map key='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' value='[Extract].[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' />
          <map key='[Duration of FULL and PARTIAL school closures (in weeks)]' value='[Extract].[Duration of FULL and PARTIAL school closures (in weeks)]' />
          <map key='[Duration of FULL closures (in weeks)]' value='[Extract].[Duration of FULL closures (in weeks)]' />
          <map key='[Duration of FULL closures from Mar-Aug 20 (in weeks)]' value='[Extract].[Duration of FULL closures from Mar-Aug 20 (in weeks)]' />
          <map key='[Duration of FULL closures from Sep 20 - Aug 21 (in weeks)]' value='[Extract].[Duration of FULL closures from Sep 20 - Aug 21 (in weeks)]' />
          <map key='[Duration of PARTIAL closures (in weeks)]' value='[Extract].[Duration of PARTIAL closures (in weeks)]' />
          <map key='[Duration of PARTIAL closures from Mar-Aug 20 (in weeks)]' value='[Extract].[Duration of PARTIAL closures from Mar-Aug 20 (in weeks)]' />
          <map key='[Duration of PARTIAL closures from Sep 20 - Aug 21 (in weeks)]' value='[Extract].[Duration of PARTIAL closures from Sep 20 - Aug 21 (in weeks)]' />
          <map key='[Education Emergency Plan?]' value='[School closure tracker- Global].[Education Emergency Plan?]' />
          <map key='[Existing Cash Transfer Supplemented?]' value='[School closure tracker- Global].[Existing Cash Transfer Supplemented?]' />
          <map key='[Facebook Page]' value='[School closure tracker- Global].[Facebook Page]' />
          <map key='[Income Group (School closure tracker- Global)]' value='[School closure tracker- Global].[Income Group]' />
          <map key='[Income Group]' value='[Extract].[Income Group]' />
          <map key='[Is exam impact dependent on grade level? (Y/N)]' value='[School closure tracker- Global].[Is exam impact dependent on grade level? (Y/N)]' />
          <map key='[National exams impact (went ahead/ cancelled/postponed/ Planned for 2020/ held in new format/ by prior assessment)]' value='[School closure tracker- Global].[National exams impact (went ahead/ cancelled/postponed/ Planned for 2020/ held in new format/ by prior assessment)]' />
          <map key='[National exams impacted? (Detail)]' value='[School closure tracker- Global].[National exams impacted? (Detail)]' />
          <map key='[National exams impacted? (Y/N)]' value='[School closure tracker- Global].[National exams impacted? (Y/N)]' />
          <map key='[Number of cases at re-opening (Binned)]' value='[Extract].[Number of cases at re-opening (Binned)]' />
          <map key='[Number of cases at re-opening (Normalized 1)]' value='[Extract].[Number of cases at re-opening (Normalized 1)]' />
          <map key='[Number of cases at re-opening (Normalized)]' value='[Extract].[Number of cases at re-opening (Normalized)]' />
          <map key='[Number of cases at re-opening (Rounded)]' value='[Extract].[Number of cases at re-opening (Rounded)]' />
          <map key='[Number of cases at re-opening (School closure tracker- Global)]' value='[School closure tracker- Global].[Number of cases at re-opening]' />
          <map key='[Number of cases at re-opening]' value='[Extract].[Number of cases at re-opening]' />
          <map key='[Number of confirmed cases at time of closure (Binned)]' value='[Extract].[Number of confirmed cases at time of closure (Binned)]' />
          <map key='[Number of confirmed cases at time of closure (Normalized)]' value='[Extract].[Number of confirmed cases at time of closure (Normalized)]' />
          <map key='[Number of confirmed cases at time of closure (Rounded)]' value='[Extract].[Number of confirmed cases at time of closure (Rounded)]' />
          <map key='[Number of confirmed cases at time of closure (School closure tracker- Global)]' value='[School closure tracker- Global].[Number of confirmed cases at time of closure]' />
          <map key='[Number of confirmed cases at time of closure]' value='[Extract].[Number of confirmed cases at time of closure]' />
          <map key='[Official COVID Education Policy Document]' value='[School closure tracker- Global].[Official COVID Education Policy Document]' />
          <map key='[Online (School closure tracker- Global)]' value='[School closure tracker- Global].[Online]' />
          <map key='[Online]' value='[Extract].[Online]' />
          <map key='[Other supports - Childcare (Detail)]' value='[School closure tracker- Global].[Other supports - Childcare (Detail)]' />
          <map key='[Other supports - Childcare]' value='[School closure tracker- Global].[Other supports - Childcare]' />
          <map key='[Other supports - Meals (Details)]' value='[School closure tracker- Global].[Other supports - Meals (Details)]' />
          <map key='[Other supports - Meals]' value='[School closure tracker- Global].[Other supports - Meals]' />
          <map key='[Other supports - Other]' value='[School closure tracker- Global].[Other supports - Other]' />
          <map key='[Parent guide?]' value='[School closure tracker- Global].[Parent guide?]' />
          <map key='[Planned Length of Closure (Weeks)]' value='[School closure tracker- Global].[Planned Length of Closure (Weeks)]' />
          <map key='[Planned Reopening]' value='[School closure tracker- Global].[Planned Reopening]' />
          <map key='[Planned re-opening 2]' value='[School closure tracker- Global].[Planned re-opening 2]' />
          <map key='[Plans for Special Education? (Y/N)]' value='[School closure tracker- Global].[Plans for Special Education? (Y/N)]' />
          <map key='[Radio (School closure tracker- Global)]' value='[School closure tracker- Global].[Radio]' />
          <map key='[Radio]' value='[Extract].[Radio]' />
          <map key='[Region (School closure tracker- Global)]' value='[School closure tracker- Global].[Region]' />
          <map key='[Region]' value='[Extract].[Region]' />
          <map key='[Remote/online tuition?]' value='[School closure tracker- Global].[Remote/online tuition?]' />
          <map key='[Reopening process started (Y/N/School year ended/Never closed)]' value='[School closure tracker- Global].[Reopening process started (Y/N/School year ended/Never closed)]' />
          <map key='[School Closures (School closure tracker- Global)]' value='[School closure tracker- Global].[School Closures]' />
          <map key='[School Closures]' value='[Extract].[School Closures]' />
          <map key='[Sending work home with students / providing hardcopies of materials]' value='[School closure tracker- Global].[Sending work home with students / providing hardcopies of materials]' />
          <map key='[Source 1]' value='[School closure tracker- Global].[Source 1]' />
          <map key='[Source for Re-opening]' value='[School closure tracker- Global].[Source for Re-opening]' />
          <map key='[Source]' value='[School closure tracker- Global].[Source]' />
          <map key='[Special Education detail]' value='[School closure tracker- Global].[Special Education detail]' />
          <map key='[Status]' value='[Extract].[Status]' />
          <map key='[TV (School closure tracker- Global)]' value='[School closure tracker- Global].[TV]' />
          <map key='[TV]' value='[Extract].[TV]' />
          <map key='[Teacher prioritization in vaccination plans]' value='[Extract].[Teacher prioritization in vaccination plans]' />
          <map key='[Total Weeks closed]' value='[School closure tracker- Global].[Total Weeks closed]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A2:AV220:no:A2:AV220:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1044</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration of FULL and PARTIAL school closures (in weeks) (Normalized)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Duration of FULL and PARTIAL school closures (in weeks) (Normalized)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>68</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cases at re-opening (Normalized 1)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of cases at re-opening (Normalized 1)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of cases at re-opening (Normalized 1)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>217</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference of cases between re-opening and time of closure (Rounded)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Difference of cases between re-opening and time of closure (Rounded)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Difference of cases between re-opening and time of closure (Rounded)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>18</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference of cases between re-opening and time of closure (Normalized)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Difference of cases between re-opening and time of closure (Normalized)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Difference of cases between re-opening and time of closure (Normalized)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference of cases between re-opening and time of closure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Difference of cases between re-opening and time of closure]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Difference of cases between re-opening and time of closure</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of confirmed cases at time of closure (Rounded)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of confirmed cases at time of closure (Rounded)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of confirmed cases at time of closure (Rounded)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of confirmed cases at time of closure (Normalized)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of confirmed cases at time of closure (Normalized)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of confirmed cases at time of closure (Normalized)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cases at re-opening (Rounded)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of cases at re-opening (Rounded)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of cases at re-opening (Rounded)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cases at re-opening (Normalized)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of cases at re-opening (Normalized)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of cases at re-opening (Normalized)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TV</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TV]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>TV</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Radio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Radio]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Radio</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Online</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Online]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Online</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cases at re-opening</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cases at re-opening]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of cases at re-opening</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>217</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cases at re-opening (Binned)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cases at re-opening (Binned)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of cases at re-opening (Binned)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>8</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of confirmed cases at time of closure (Binned)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of confirmed cases at time of closure (Binned)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of confirmed cases at time of closure (Binned)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of confirmed cases at time of closure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of confirmed cases at time of closure]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of confirmed cases at time of closure</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>83</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>2009</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>256</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of latest update</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date of latest update]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Date of latest update</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teacher prioritization in vaccination plans</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Teacher prioritization in vaccination plans]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Teacher prioritization in vaccination plans</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>256</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration of FULL and PARTIAL school closures (in weeks)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Duration of FULL and PARTIAL school closures (in weeks)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Duration of FULL and PARTIAL school closures (in weeks)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>68</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration of FULL closures (in weeks)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Duration of FULL closures (in weeks)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Duration of FULL closures (in weeks)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>49</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration of PARTIAL closures (in weeks)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Duration of PARTIAL closures (in weeks)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Duration of PARTIAL closures (in weeks)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>47</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration of FULL closures from Mar-Aug 20 (in weeks)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Duration of FULL closures from Mar-Aug 20 (in weeks)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Duration of FULL closures from Mar-Aug 20 (in weeks)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>25</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration of FULL closures from Sep 20 - Aug 21 (in weeks)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Duration of FULL closures from Sep 20 - Aug 21 (in weeks)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Duration of FULL closures from Sep 20 - Aug 21 (in weeks)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>36</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration of PARTIAL closures from Mar-Aug 20 (in weeks)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Duration of PARTIAL closures from Mar-Aug 20 (in weeks)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Duration of PARTIAL closures from Mar-Aug 20 (in weeks)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>17</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration of PARTIAL closures from Sep 20 - Aug 21 (in weeks)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Duration of PARTIAL closures from Sep 20 - Aug 21 (in weeks)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Duration of PARTIAL closures from Sep 20 - Aug 21 (in weeks)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>44</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income Group]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Income Group</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closures</remote-name>
            <remote-type>129</remote-type>
            <local-name>[School Closures]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>School Closures</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Any distance learning?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Any distance learning?]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Any distance learning?</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Code (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Income Group (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Income Group</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closures</remote-name>
            <remote-type>130</remote-type>
            <local-name>[School Closures (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>School Closures</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>As of</remote-name>
            <remote-type>7</remote-type>
            <local-name>[As of (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>As of</remote-alias>
            <ordinal>38</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>39</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of confirmed cases at time of closure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of confirmed cases at time of closure (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Number of confirmed cases at time of closure</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned Reopening</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Planned Reopening]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Planned Reopening</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned Length of Closure (Weeks)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Planned Length of Closure (Weeks)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Planned Length of Closure (Weeks)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Closure extended?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Closure extended?]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Closure extended?</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Planned re-opening 2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Planned re-opening 2]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Planned re-opening 2</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Details of closure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Details of closure]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Details of closure</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reopening process started (Y/N/School year ended/Never closed)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Reopening process started (Y/N/School year ended/Never closed)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Reopening process started (Y/N/School year ended/Never closed)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date reopening process started</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date reopening process started]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Date reopening process started</remote-alias>
            <ordinal>47</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cases at re-opening</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cases at re-opening (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Number of cases at re-opening</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Weeks closed</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total Weeks closed]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Total Weeks closed</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Details of re-opening</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Details of re-opening]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Details of re-opening</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Remote/online tuition?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Remote/online tuition?]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Remote/online tuition?</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Any distance learning?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Any distance learning? (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Any distance learning?</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Online</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Online (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Online</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Radio</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Radio (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Radio</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TV</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TV (School closure tracker- Global)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>TV</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sending work home with students / providing hardcopies of materials</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sending work home with students / providing hardcopies of materials]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Sending work home with students / providing hardcopies of materials</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance curriculum available in multiple languages?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Distance curriculum available in multiple languages?]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Distance curriculum available in multiple languages?</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Details of language of materials</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Details of language of materials]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Details of language of materials</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parent guide?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Parent guide?]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Parent guide?</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Details of parent guidance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Details of parent guidance]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Details of parent guidance</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education Emergency Plan?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Education Emergency Plan?]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Education Emergency Plan?</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>National exams impacted? (Y/N)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[National exams impacted? (Y/N)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>National exams impacted? (Y/N)</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>National exams impacted? (Detail)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[National exams impacted? (Detail)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>National exams impacted? (Detail)</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>National exams impact (went ahead/ cancelled/postponed/ Planned for 2020/ held in new format/ by prior assessment)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[National exams impact (went ahead/ cancelled/postponed/ Planned for 2020/ held in new format/ by prior assessment)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>National exams impact (went ahead/ cancelled/postponed/ Planned for 2020/ held in new format/ by prior assessment)</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is exam impact dependent on grade level? (Y/N)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Is exam impact dependent on grade level? (Y/N)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Is exam impact dependent on grade level? (Y/N)</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Plans for Special Education? (Y/N)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Plans for Special Education? (Y/N)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Plans for Special Education? (Y/N)</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Special Education detail</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Special Education detail]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Special Education detail</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Broader workplace closures?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Broader workplace closures?]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Broader workplace closures?</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Existing Cash Transfer Supplemented?</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Existing Cash Transfer Supplemented?]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Existing Cash Transfer Supplemented?</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Details of Cash Transfer / social proection program</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Details of Cash Transfer / social proection program]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Details of Cash Transfer / social proection program</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other supports - Childcare</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Other supports - Childcare]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Other supports - Childcare</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other supports - Childcare (Detail)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Other supports - Childcare (Detail)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Other supports - Childcare (Detail)</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other supports - Meals</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Other supports - Meals]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Other supports - Meals</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other supports - Meals (Details)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Other supports - Meals (Details)]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Other supports - Meals (Details)</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other supports - Other</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Other supports - Other]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Other supports - Other</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source 1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source 1]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Source 1</remote-alias>
            <ordinal>77</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Facebook Page</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Facebook Page]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Facebook Page</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Official COVID Education Policy Document</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Official COVID Education Policy Document]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Official COVID Education Policy Document</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source for Re-opening</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source for Re-opening]</local-name>
            <parent-name>[School closure tracker- Global]</parent-name>
            <remote-alias>Source for Re-opening</remote-alias>
            <ordinal>80</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RMY_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_277252877234704390:qk]&quot;' value='TV' />
          <alias key='&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_277252877235322887:qk]&quot;' value='Radio' />
          <alias key='&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_277252877235937288:qk]&quot;' value='Online' />
        </aliases>
      </column>
      <column datatype='string' name='[Any distance learning?]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_277252877258088458]) / TOTAL(AVG([Calculation_277252877258088458]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Any distance learning? (Convert)' datatype='integer' name='[Calculation_1171217405050171392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Any distance learning?] = &quot;No information&quot; then 0&#13;&#10;elseif [Any distance learning?] = &quot;No&quot; then 1&#13;&#10;elseif [Any distance learning?] = &quot;Varies by location&quot; then 2&#13;&#10;else 3&#13;&#10;end' />
      </column>
      <column caption='Teacher prioritization in vaccination plans (Convert)' datatype='integer' name='[Calculation_1349954015201214464]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Teacher prioritization in vaccination plans] = &quot;Priority group unspecified&quot; then 0&#13;&#10;elseif [Teacher prioritization in vaccination plans] = &quot;Not prioritised&quot; then 1&#13;&#10;elseif [Teacher prioritization in vaccination plans] = &quot;Priority group 3 or lower&quot; then 2&#13;&#10;elseif [Teacher prioritization in vaccination plans] = &quot;Priority group 2&quot; then 3&#13;&#10;else 4&#13;&#10;end' />
      </column>
      <column caption='School Closures (Convert)' datatype='integer' name='[Calculation_1349954015203790849]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [School Closures] = &quot;No&quot; then 0&#13;&#10;elseif [School Closures] = &quot;Partial&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
      </column>
      <column caption='Income Group (Convert)' datatype='integer' name='[Calculation_1349954015204737026]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Income Group] = &quot;Low income&quot; then 0&#13;&#10;elseif [Income Group] = &quot;Lower middle income&quot; then 1&#13;&#10;elseif [Income Group] = &quot;Upper middle income&quot; then 2&#13;&#10;else 3&#13;&#10;end' />
      </column>
      <column caption='Safety of Reopening Schools' datatype='string' name='[Calculation_1393582637183160320]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Difference of cases between re-opening and time of closure]&lt;= 5000 then &quot;Safe&quot;&#13;&#10;elseif [Difference of cases between re-opening and time of closure] &lt;=10000 then &quot;Moderately safe&quot;&#13;&#10;else &quot;Not safe&quot;&#13;&#10;end' />
      </column>
      <column caption='Sending work home with students / providing hardcopies of materials (Convert)' datatype='integer' name='[Calculation_1868712401855651840]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_2596043735711019012] = &quot;No information&quot; then 0&#13;&#10;elseif [Calculation_2596043735711019012] = &quot;No&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
      </column>
      <column caption='Effectiveness' datatype='integer' name='[Calculation_1995657616432259072]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Country (clusters)] = &quot;Not effective&quot; then 0&#13;&#10;elseif [Country (clusters)] = &quot;Moderately effective&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
      </column>
      <column caption='Safety (Convert)' datatype='integer' name='[Calculation_1995657616436191233]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Country (clusters) (1)]= &quot;Not safe&quot; then 0&#13;&#10;else 1&#13;&#10;end' />
      </column>
      <column caption='Difference of cases between re-opening and time of closure (Percentage)' datatype='real' name='[Calculation_2596043735684087809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Difference of cases between re-opening and time of closure]/[Number of confirmed cases at time of closure (Binned)])*100' />
      </column>
      <column caption='Sending work home with students / providing hardcopies of materials (Cleaned)' datatype='string' name='[Calculation_2596043735711019012]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if isnull([Sending work home with students / providing hardcopies of materials]) then &quot;No information&quot;&#13;&#10;else [Sending work home with students / providing hardcopies of materials]&#13;&#10;end' />
      </column>
      <column caption='Location Drill' datatype='string' name='[Calculation_277252877213130752]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Region Set] then [Country] else [Region] end' />
      </column>
      <column caption='TV (Agg)' datatype='integer' name='[Calculation_277252877234704390]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [TV] = &quot;Yes&quot; then 1&#13;&#10;elseif [TV] = &quot;No&quot; then 0&#13;&#10;else -1&#13;&#10;end' />
      </column>
      <column caption='Radio (Agg)' datatype='integer' name='[Calculation_277252877235322887]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Radio] = &quot;Yes&quot; then 1&#13;&#10;elseif [Radio] = &quot;No&quot; then 0&#13;&#10;else -1&#13;&#10;end' />
      </column>
      <column caption='Online (Agg)' datatype='integer' name='[Calculation_277252877235937288]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Online] = &quot;Yes&quot; then 1&#13;&#10;elseif [Online] = &quot;No&quot; then 0&#13;&#10;else -1&#13;&#10;end' />
      </column>
      <column caption='Parameter link' datatype='boolean' name='[Calculation_277252877240111113]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS ([Country], [Parameters].[Parameter 1])' />
      </column>
      <column caption='Any distance learning? (Count)' datatype='integer' name='[Calculation_277252877258088458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Any distance learning?] = &quot;Yes&quot; then 1&#13;&#10;elseif [Any distance learning?] = &quot;No&quot; then 0&#13;&#10;else -1&#13;&#10;end' />
      </column>
      <column caption='Safety of Reopening Schools (Convert)' datatype='integer' name='[Calculation_523262009521180673]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_1393582637183160320] = &quot;Not safe&quot; then 0&#13;&#10;elseif [Calculation_1393582637183160320] = &quot;Moderately safe&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
      </column>
      <column caption='School Closures (Agg)' datatype='integer' name='[Calculation_986006868877824000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [School Closures] = &quot;No&quot; then 0&#13;&#10;else 1&#13;&#10;end' />
      </column>
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country (School closure tracker- Global)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Safety' datatype='string' name='[Country (clusters) (1)]' parent-model='[AnalyticModel:{77535841-8210-4cec-a401-a05f5481823a}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' new-bin='true'>
          <bin default-name='false' value='&quot;Not safe&quot;'>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Bolivia (Plurinational State of)&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Iran (Islamic Republic of)&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russian Federation&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
            <value>&quot;United States of America&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Safe&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Aruba&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahamas&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;British Virgin Islands&quot;</value>
            <value>&quot;Brunei Darussalam&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cabo Verde&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Cayman Islands&quot;</value>
            <value>&quot;Central African republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Curacao&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czechia&quot;</value>
            <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Dominica&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Eswatini&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Faroe Islands&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Gibraltar&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Greenland&quot;</value>
            <value>&quot;Grenada&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Lao PDR&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Liechtenstein&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Marshall Islands&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Micronesia (Federated States of)&quot;</value>
            <value>&quot;Monaco&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Palau&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Republic of Korea&quot;</value>
            <value>&quot;Republic of Moldova&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
            <value>&quot;Saint Kitts and Nevis&quot;</value>
            <value>&quot;Saint Lucia&quot;</value>
            <value>&quot;Saint Vincent and the Grenadines&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Sint Marteen&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Syrian Arab Republic&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Timor-Leste&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Turks and Caicos Island&quot;</value>
            <value>&quot;Tuvalu&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;United Republic of Tanzania&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Viet Nam&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Efficiency' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{8ddd7938-da1f-4425-abbc-71c9e6df5579}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' new-bin='true'>
          <bin default-name='false' value='&quot;Effective&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Aruba&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Brunei Darussalam&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cabo Verde&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Cayman Islands&quot;</value>
            <value>&quot;Central African republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Curacao&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Dominica&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Faroe Islands&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Gibraltar&quot;</value>
            <value>&quot;Greenland&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Lao PDR&quot;</value>
            <value>&quot;Liechtenstein&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Marshall Islands&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Micronesia (Federated States of)&quot;</value>
            <value>&quot;Monaco&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Palau&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Republic of Moldova&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
            <value>&quot;Saint Kitts and Nevis&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Sint Marteen&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Syrian Arab Republic&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Tuvalu&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
            <value>&quot;United Republic of Tanzania&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
            <value>&quot;Viet Nam&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Zambia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Moderately effective&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahamas&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Bolivia (Plurinational State of)&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;British Virgin Islands&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Czechia&quot;</value>
            <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Eswatini&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Grenada&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran (Islamic Republic of)&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Republic of Korea&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Saint Lucia&quot;</value>
            <value>&quot;Saint Vincent and the Grenadines&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Timor-Leste&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turks and Caicos Island&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Not effective&quot;'>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Russian Federation&quot;</value>
            <value>&quot;United States of America&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
          <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
          <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
        </semantic-values>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Difference of cases between re-opening and time of closure (Normalized)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Duration of FULL and PARTIAL school closures (in weeks) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Duration of FULL and PARTIAL school closures (in weeks)]' peg='0' size='5.09' />
      </column>
      <column datatype='integer' name='[Duration of FULL and PARTIAL school closures (in weeks)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Duration of FULL closures (in weeks)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Duration of PARTIAL closures (in weeks)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of cases at re-opening (Binned)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of cases at re-opening (Normalized 1)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of cases at re-opening (Normalized)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of cases at re-opening]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of confirmed cases at time of closure (Normalized)]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Online (Agg) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Calculation_277252877235937288]' peg='0' size='0.532' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[School Closures (Agg) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Calculation_986006868877824000]' peg='0' size='0.532' />
      </column>
      <column datatype='string' name='[School Closures]' role='dimension' type='nominal' />
      <column datatype='string' name='[Status]' role='dimension' type='nominal' />
      <column datatype='string' name='[Teacher prioritization in vaccination plans]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='School closure tracker- Global' datatype='table' name='[__tableau_internal_object_id__].[School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1995657616432259072]' derivation='Avg' name='[avg:Calculation_1995657616432259072:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_277252877234704390]' derivation='Avg' name='[avg:Calculation_277252877234704390:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_277252877235322887]' derivation='Avg' name='[avg:Calculation_277252877235322887:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_277252877235937288]' derivation='Avg' name='[avg:Calculation_277252877235937288:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Difference of cases between re-opening and time of closure (Normalized)]' derivation='Avg' name='[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' derivation='Avg' name='[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Duration of FULL closures (in weeks)]' derivation='Avg' name='[avg:Duration of FULL closures (in weeks):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Duration of PARTIAL closures (in weeks)]' derivation='Avg' name='[avg:Duration of PARTIAL closures (in weeks):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of cases at re-opening (Normalized 1)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized 1):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of cases at re-opening (Normalized)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of cases at re-opening]' derivation='Avg' name='[avg:Number of cases at re-opening:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of confirmed cases at time of closure (Normalized)]' derivation='Avg' name='[avg:Number of confirmed cases at time of closure (Normalized):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Duration of FULL closures (in weeks)]' derivation='Count' name='[cnt:Duration of FULL closures (in weeks):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Duration of PARTIAL closures (in weeks)]' derivation='Count' name='[cnt:Duration of PARTIAL closures (in weeks):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Duration of FULL closures (in weeks)]' derivation='CountD' name='[ctd:Duration of FULL closures (in weeks):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Duration of PARTIAL closures (in weeks)]' derivation='CountD' name='[ctd:Duration of PARTIAL closures (in weeks):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Duration of FULL closures (in weeks)]' derivation='Median' name='[med:Duration of FULL closures (in weeks):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Any distance learning?]' derivation='None' name='[none:Any distance learning?:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1393582637183160320]' derivation='None' name='[none:Calculation_1393582637183160320:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2596043735711019012]' derivation='None' name='[none:Calculation_2596043735711019012:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[School Closures]' derivation='None' name='[none:School Closures:nk]' pivot='key' type='nominal' />
      <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Number of cases at re-opening (Binned)]' derivation='Sum' name='[sum:Number of cases at re-opening (Binned):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of cases at re-opening (Normalized)]' derivation='Sum' name='[sum:Number of cases at re-opening (Normalized):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of cases at re-opening]' derivation='Sum' name='[sum:Number of cases at re-opening:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of confirmed cases at time of closure (Normalized)]' derivation='Sum' name='[sum:Number of confirmed cases at time of closure (Normalized):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Any distance learning?)' hidden='true' name='[Action (Any distance learning?)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Any distance learning?]' />
        </groupfilter>
      </group>
      <group caption='Action (Any distance learning?,Sending work home with students / providing hardcopies of materials (Cleaned),Country)' hidden='true' name='[Action (Any distance learning?,Sending work home with students / providing hardcopies of materials (Cleaned),Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Any distance learning?]' />
          <groupfilter function='level-members' level='[Calculation_2596043735711019012]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Code,Country,Region)' hidden='true' name='[Action (Code,Country,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Code]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Code,Region)' hidden='true' name='[Action (Code,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Code]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Income Group)' hidden='true' name='[Action (Country,Income Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Income Group]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Income Group,Teacher prioritization in vaccination plans)' hidden='true' name='[Action (Country,Income Group,Teacher prioritization in vaccination plans)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Income Group]' />
          <groupfilter function='level-members' level='[Teacher prioritization in vaccination plans]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Region)' hidden='true' name='[Action (Country,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Region,School Closures)' hidden='true' name='[Action (Country,Region,School Closures)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[School Closures]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,School Closures)' hidden='true' name='[Action (Country,School Closures)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[School Closures]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,School Closures,Teacher prioritization in vaccination plans)' hidden='true' name='[Action (Country,School Closures,Teacher prioritization in vaccination plans)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[School Closures]' />
          <groupfilter function='level-members' level='[Teacher prioritization in vaccination plans]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Teacher prioritization in vaccination plans)' hidden='true' name='[Action (Country,Teacher prioritization in vaccination plans)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Teacher prioritization in vaccination plans]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,YEAR(Date),QUARTER(Date),MONTH(Date),Region,School Closures)' hidden='true' name='[Action (Country,YEAR(Date),QUARTER(Date),MONTH(Date),Region,School Closures)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[yr:Date:ok]' />
          <groupfilter function='level-members' level='[qr:Date:ok]' />
          <groupfilter function='level-members' level='[mn:Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[School Closures]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,YEAR(Date),QUARTER(Date),Region,School Closures)' hidden='true' name='[Action (Country,YEAR(Date),QUARTER(Date),Region,School Closures)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[yr:Date:ok]' />
          <groupfilter function='level-members' level='[qr:Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[School Closures]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,YEAR(Date),Region,School Closures)' hidden='true' name='[Action (Country,YEAR(Date),Region,School Closures)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[yr:Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[School Closures]' />
        </groupfilter>
      </group>
      <group caption='Action (Income Group)' hidden='true' name='[Action (Income Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Income Group]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Region,School Closures)' hidden='true' name='[Action (Region,School Closures)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[School Closures]' />
        </groupfilter>
      </group>
      <group caption='Action (Safety of Reopening Schools)' hidden='true' name='[Action (Safety of Reopening Schools)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1393582637183160320]' />
        </groupfilter>
      </group>
      <group caption='Action (Safety)' hidden='true' name='[Action (Safety)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (clusters) (1)]' />
        </groupfilter>
      </group>
      <group caption='Action (School Closures)' hidden='true' name='[Action (School Closures)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[School Closures]' />
        </groupfilter>
      </group>
      <group caption='Action (Sending work home with students / providing hardcopies of materials (Cleaned))' hidden='true' name='[Action (Sending work home with students / providing hardcopies of materials (Cleaned))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2596043735711019012]' />
        </groupfilter>
      </group>
      <group caption='Action (Teacher prioritization in vaccination plans)' hidden='true' name='[Action (Teacher prioritization in vaccination plans)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Teacher prioritization in vaccination plans]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),QUARTER(Date),Region,School Closures)' hidden='true' name='[Action (YEAR(Date),QUARTER(Date),Region,School Closures)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Date:ok]' />
          <groupfilter function='level-members' level='[qr:Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[School Closures]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Region,YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Region:nk]' />
          <groupfilter function='level-members' level='[yr:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Region Set' name='[Region Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='empty-level' member='[Region]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group caption='East Asia &amp; Pacific' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Region]' member='&quot;East Asia &amp; Pacific&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Democratic People&apos;s Republic of Korea&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Lao PDR&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Micronesia (Federated States of)&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Republic of Korea&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Viet Nam&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Country]' />
            <hierarchy name='[Region]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Sub-Saharan Africa' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Region]' member='&quot;Sub-Saharan Africa&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Central African republic&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Congo&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Cote d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Democratic Republic of the Congo&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United Republic of Tanzania&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Country]' />
            <hierarchy name='[Region]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Middle East &amp; North Africa' name='[Set 3]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Region]' member='&quot;Middle East &amp; North Africa&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Iran (Islamic Republic of)&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Syrian Arab Republic&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Yemen&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Country]' />
            <hierarchy name='[Region]' />
          </order>
        </groupfilter>
      </group>
      <group caption='South Asia' name='[Set 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Region]' member='&quot;South Asia&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Sri Lanka&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Country]' />
            <hierarchy name='[Region]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Latin America &amp; Carribean' name='[Set 5]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Region]' member='&quot;Latin America &amp; Caribbean&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Bolivia (Plurinational State of)&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Curacao&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Saint Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Turks and Caicos Island&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Venezuela&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Country]' />
            <hierarchy name='[Region]' />
          </order>
        </groupfilter>
      </group>
      <group caption='North America' name='[Set 6]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Region]' member='&quot;North America&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Country]' />
            <hierarchy name='[Region]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Europe &amp; Central Asia' name='[Set 7]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Region]' member='&quot;Europe &amp; Central Asia&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[Country]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Faroe Islands&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Republic of Moldova&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' />
              <groupfilter function='member' level='[Country]' member='&quot;Uzbekistan&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Country]' />
            <hierarchy name='[Region]' />
          </order>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Closure Date' />
        <drill-path name='Location'>
          <field>[Region]</field>
          <field>[Country]</field>
        </drill-path>
        <drill-path name='Reopening Date' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turks and Caicos Island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sint Marteen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Region:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Status:nk]' type='palette'>
            <map to='#9b93c9'>
              <bucket>&quot;Closed due to COVID-19&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Academic break&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Partially open&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Fully open&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1393582637183160320:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Moderately safe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Not safe&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Safe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#32779b'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#419eb6'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Any distance learning?:nk]' type='palette'>
            <map to='#419eb6'>
              <bucket>&quot;No information&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>&quot;Varies by location&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2596043735711019012:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#72bac6'>
              <bucket>&quot;No information&quot;</bucket>
            </map>
            <map to='#aedcd5'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_1798625126560198657:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Duration of FULL closures (in weeks):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[ctd:Duration of FULL closures (in weeks):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[med:Duration of FULL closures (in weeks):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[sum:Calculation_1798625126560198657:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[sum:Number of cases at re-opening (Normalized):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Number of cases at re-opening:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[sum:Number of cases at re-opening:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Number of confirmed cases at time of closure (Normalized):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Duration of PARTIAL closures (in weeks):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Number of cases at re-opening (Normalized):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[sum:Number of cases at re-opening (Binned):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Duration of PARTIAL closures (in weeks):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[ctd:Duration of PARTIAL closures (in weeks):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[sum:Calculation_1798625126559576064:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[sum:Number of confirmed cases at time of closure (Normalized):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Duration of FULL closures (in weeks):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:School Closures:nk]' type='palette'>
            <map to='#8074a8'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;No&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Partial&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (clusters) (1)]' type='palette'>
            <map to='#b07aa1'>
              <bucket>&quot;Not safe&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Safe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Malaysia&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[Country (clusters) (1)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Not safe&quot;</bucket>
            <bucket>&quot;Safe&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[Country (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Effective&quot;</bucket>
            <bucket>&quot;Moderately effective&quot;</bucket>
            <bucket>&quot;Not effective&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Duration of FULL and PARTIAL school closures (in weeks) (Normalized)' />
        <field-sort-custom-order field='Calculation_1393582637183160320' />
        <field-sort-custom-order field='Calculation_523262009521180673' />
        <field-sort-custom-order field='Number of cases at re-opening (Normalized 1)' />
        <field-sort-custom-order field='Difference of cases between re-opening and time of closure (Rounded)' />
        <field-sort-custom-order field='Difference of cases between re-opening and time of closure (Normalized)' />
        <field-sort-custom-order field='Difference of cases between re-opening and time of closure' />
        <field-sort-custom-order field='Calculation_2596043735684087809' />
        <field-sort-custom-order field='Number of confirmed cases at time of closure (Rounded)' />
        <field-sort-custom-order field='Number of confirmed cases at time of closure (Normalized)' />
        <field-sort-custom-order field='Number of cases at re-opening (Rounded)' />
        <field-sort-custom-order field='Number of cases at re-opening (Normalized)' />
        <field-sort-custom-order field='TV' />
        <field-sort-custom-order field='Radio' />
        <field-sort-custom-order field='Online' />
        <field-sort-custom-order field='Number of cases at re-opening' />
        <field-sort-custom-order field='Number of cases at re-opening (Binned)' />
        <field-sort-custom-order field='Number of confirmed cases at time of closure (Binned)' />
        <field-sort-custom-order field='Number of confirmed cases at time of closure' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Status' />
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Date of latest update' />
        <field-sort-custom-order field='Teacher prioritization in vaccination plans' />
        <field-sort-custom-order field='Calculation_1349954015201214464' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Duration of FULL and PARTIAL school closures (in weeks)' />
        <field-sort-custom-order field='Duration of FULL closures (in weeks)' />
        <field-sort-custom-order field='Duration of PARTIAL closures (in weeks)' />
        <field-sort-custom-order field='Duration of FULL closures from Mar-Aug 20 (in weeks)' />
        <field-sort-custom-order field='Duration of FULL closures from Mar-Aug 20 (in weeks) (copy)_1857453396787216384' />
        <field-sort-custom-order field='Duration of FULL closures from Sep 20 - Aug 21 (in weeks)' />
        <field-sort-custom-order field='Duration of PARTIAL closures from Mar-Aug 20 (in weeks)' />
        <field-sort-custom-order field='Duration of PARTIAL closures from Sep 20 - Aug 21 (in weeks)' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Income Group' />
        <field-sort-custom-order field='Calculation_1349954015204737026' />
        <field-sort-custom-order field='School Closures' />
        <field-sort-custom-order field='Calculation_1349954015203790849' />
        <field-sort-custom-order field='Calculation_986006868877824000' />
        <field-sort-custom-order field='Any distance learning?' />
        <field-sort-custom-order field='Calculation_1171217405050171392' />
        <field-sort-custom-order field='AnalyticModel:{c50f9c7f-e66b-43df-a379-9d60925d2d97}' />
        <field-sort-custom-order field='Calculation_277252877213130752' />
        <field-sort-custom-order field='Calculation_277252877234704390' />
        <field-sort-custom-order field='Calculation_277252877235322887' />
        <field-sort-custom-order field='Calculation_277252877235937288' />
        <field-sort-custom-order field='Calculation_277252877240111113' />
        <field-sort-custom-order field='Calculation_277252877258088458' />
        <field-sort-custom-order field='Calculation_277252877260390412' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Search Country' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{14775b9c-ac2e-4e0f-bde5-2535488108d6}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_1995657616432259072:qk]' />
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{77535841-8210-4cec-a401-a05f5481823a}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_1995657616432259072:qk]' />
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' />
          </lod-fields>
          <number-of-desired-clusters>2</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{8ddd7938-da1f-4425-abbc-71c9e6df5579}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' />
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Number of cases at re-opening (Normalized 1):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' />
          </lod-fields>
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{c50f9c7f-e66b-43df-a379-9d60925d2d97}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' />
            <field name='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Number of cases at re-opening (Normalized 1):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='hyper_0' name='Extract' table='[Extract].[Extract]' type='table'>
                <columns prep-output-type='outputOperationTypeCreate' />
              </relation>
            </properties>
          </object>
          <object caption='School closure tracker- Global' id='School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92'>
            <properties context=''>
              <relation connection='excel-direct.1jeshqe16gy54l0zwqwy20q3x82e' name='School closure tracker- Global' table='[&apos;School closure tracker- Global$&apos;]' type='table'>
                <columns gridOrigin='A2:AV220:no:A2:AV220:1' lost='0' outcome='1' processed='1044'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                  <column datatype='string' name='Income Group' ordinal='3' />
                  <column datatype='string' name='School Closures' ordinal='4' />
                  <column datatype='date' name='As of' ordinal='5' />
                  <column datatype='date' name='Date' ordinal='6' />
                  <column datatype='integer' name='Number of confirmed cases at time of closure' ordinal='7' />
                  <column datatype='string' name='Planned Reopening' ordinal='8' />
                  <column datatype='string' name='Planned Length of Closure (Weeks)' ordinal='9' />
                  <column datatype='string' name='Closure extended?' ordinal='10' />
                  <column datatype='string' name='Planned re-opening 2' ordinal='11' />
                  <column datatype='string' name='Details of closure' ordinal='12' />
                  <column datatype='string' name='Reopening process started (Y/N/School year ended/Never closed)' ordinal='13' />
                  <column datatype='date' name='Date reopening process started' ordinal='14' />
                  <column datatype='integer' name='Number of cases at re-opening' ordinal='15' />
                  <column datatype='string' name='Total Weeks closed' ordinal='16' />
                  <column datatype='string' name='Details of re-opening' ordinal='17' />
                  <column datatype='string' name='Remote/online tuition?' ordinal='18' />
                  <column datatype='string' name='Any distance learning?' ordinal='19' />
                  <column datatype='string' name='Online' ordinal='20' />
                  <column datatype='string' name='Radio' ordinal='21' />
                  <column datatype='string' name='TV' ordinal='22' />
                  <column datatype='string' name='Sending work home with students / providing hardcopies of materials' ordinal='23' />
                  <column datatype='string' name='Distance curriculum available in multiple languages?' ordinal='24' />
                  <column datatype='string' name='Details of language of materials' ordinal='25' />
                  <column datatype='string' name='Parent guide?' ordinal='26' />
                  <column datatype='string' name='Details of parent guidance' ordinal='27' />
                  <column datatype='string' name='Education Emergency Plan?' ordinal='28' />
                  <column datatype='string' name='National exams impacted? (Y/N)' ordinal='29' />
                  <column datatype='string' name='National exams impacted? (Detail)' ordinal='30' />
                  <column datatype='string' name='National exams impact (went ahead/ cancelled/postponed/ Planned for 2020/ held in new format/ by prior assessment)' ordinal='31' />
                  <column datatype='string' name='Is exam impact dependent on grade level? (Y/N)' ordinal='32' />
                  <column datatype='string' name='Plans for Special Education? (Y/N)' ordinal='33' />
                  <column datatype='string' name='Special Education detail' ordinal='34' />
                  <column datatype='string' name='Broader workplace closures?' ordinal='35' />
                  <column datatype='string' name='Existing Cash Transfer Supplemented?' ordinal='36' />
                  <column datatype='string' name='Details of Cash Transfer / social proection program' ordinal='37' />
                  <column datatype='string' name='Other supports - Childcare' ordinal='38' />
                  <column datatype='string' name='Other supports - Childcare (Detail)' ordinal='39' />
                  <column datatype='string' name='Other supports - Meals' ordinal='40' />
                  <column datatype='string' name='Other supports - Meals (Details)' ordinal='41' />
                  <column datatype='string' name='Other supports - Other' ordinal='42' />
                  <column datatype='string' name='Source' ordinal='43' />
                  <column datatype='string' name='Source 1' ordinal='44' />
                  <column datatype='string' name='Facebook Page' ordinal='45' />
                  <column datatype='string' name='Official COVID Education Policy Document' ordinal='46' />
                  <column datatype='string' name='Source for Re-opening' ordinal='47' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (School closure tracker- Global)]' />
            </expression>
            <first-end-point object-id='Migrated Data' />
            <second-end-point object-id='School closure tracker- Global_FDA880B4D6EA40598E047D549DF20F92' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 9 (generated)' name='[Action10_01BCACF3B87743D0B198EDB530D22A72]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Page 2' type='sheet' worksheet='List of countries and regions' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Page 2' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5_1815F5D9D39B4863B7EFDCA07D51F787]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Page 2' type='sheet' worksheet='Income Group' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Page 2' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5_7B30AC9752AB4E59BA42A54172AD4276]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Page 2' type='sheet' worksheet='Providing Neccessary Materials to Students' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Page 2' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action5_FBCD043F0447461F96A37069B24BD6E4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Page 1' type='sheet' worksheet='Countries&apos; Income Groups' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Page 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Page 1' type='sheet' worksheet='Duration of Closures' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Page 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action7_58920D079F724850B4C68F13053B732D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Page 1' type='sheet' worksheet='Percentage of School Closures' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Page 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action7_B0C5D761C97A4A229FD16C5720FB0D6D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Page 1' type='sheet' worksheet='Safety of Reopening Schools - Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Page 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action8_EB719210042941A5B216EC211807E7F1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Page 1' type='sheet' worksheet='Vaccine Prioritization to Teachers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Page 1' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action9_FED448A695A8429DA267203E1D8A1C21]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Page 1' type='sheet' worksheet='Effects of School Closure on Controlling Covid Confirmed Cases ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Page 1' />
      </command>
    </action>
    <edit-group-action caption='Country Drill' name='[Action3_4802D1E50E5A4ACCA8A4171091351858]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Effects of School Closure on Controlling Covid Confirmed Cases ' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='exclude-all' />
        <param name='target-group' value='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Region Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Countries&apos; Income Groups'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Countries&apos; Income Groups</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column caption='Effectiveness' datatype='integer' name='[Calculation_1995657616432259072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Country (clusters)] = &quot;Not effective&quot; then 0&#13;&#10;elseif [Country (clusters)] = &quot;Moderately effective&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
            </column>
            <column caption='Safety' datatype='string' name='[Country (clusters) (1)]' parent-model='[AnalyticModel:{77535841-8210-4cec-a401-a05f5481823a}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Not safe&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Safe&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Efficiency' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{8ddd7938-da1f-4425-abbc-71c9e6df5579}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Effective&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderately effective&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not effective&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Difference of cases between re-opening and time of closure (Normalized)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Number of cases at re-opening (Normalized 1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[School Closures]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1995657616432259072]' derivation='Avg' name='[avg:Calculation_1995657616432259072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference of cases between re-opening and time of closure (Normalized)]' derivation='Avg' name='[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' derivation='Avg' name='[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cases at re-opening (Normalized 1)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized 1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]'>
            <groupfilter function='level-members' level='[Country (clusters) (1)]' user:ui-action-filter='[Action7_B0C5D761C97A4A229FD16C5720FB0D6D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]'>
            <groupfilter function='level-members' level='[School Closures]' user:ui-action-filter='[Action7_58920D079F724850B4C68F13053B732D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Income Group:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;High income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Longitude (generated)]' field-type='quantitative' max='10215727.832744621' min='-13806984.918207485' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Latitude (generated)]' field-type='quantitative' max='5946016.2939377893' min='-8104635.5178191811' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e9edf5' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' />
              <lod column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[attr:Region:nk]' />
              <size column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Income Group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
                <format attr='size' value='0.88955801725387573' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Latitude (generated)]</rows>
        <cols>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E9D12434-D679-4E95-9FFD-6E1D3B9BB040}' />
    </worksheet>
    <worksheet name='Distance Learning'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Distance Learning</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column datatype='string' name='[Any distance learning?]' role='dimension' type='nominal' />
            <column caption='Sending work home with students / providing hardcopies of materials (Cleaned)' datatype='string' name='[Calculation_2596043735711019012]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if isnull([Sending work home with students / providing hardcopies of materials]) then &quot;No information&quot;&#13;&#10;else [Sending work home with students / providing hardcopies of materials]&#13;&#10;end' />
            </column>
            <column caption='Any distance learning? (Count)' datatype='integer' name='[Calculation_277252877258088458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Any distance learning?] = &quot;Yes&quot; then 1&#13;&#10;elseif [Any distance learning?] = &quot;No&quot; then 0&#13;&#10;else -1&#13;&#10;end' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sending work home with students / providing hardcopies of materials]' role='dimension' type='nominal' />
            <column-instance column='[Any distance learning?]' derivation='None' name='[none:Any distance learning?:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_277252877258088458]' derivation='Count' name='[pcto:cnt:Calculation_277252877258088458:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Any distance learning?:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Any distance learning?,Sending work home with students / providing hardcopies of materials (Cleaned),Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_D832E3A83ECA43C3B8CF2AFC5AB5B3D9]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Any distance learning?]' />
              <groupfilter function='level-members' level='[Calculation_2596043735711019012]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_01BCACF3B87743D0B198EDB530D22A72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Code]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_01BCACF3B87743D0B198EDB530D22A72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Code]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_FA290272A0BC4E02A7F91E3E6E53F89B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Income Group)]'>
            <groupfilter function='level-members' level='[Income Group]' user:ui-action-filter='[Action5_1815F5D9D39B4863B7EFDCA07D51F787]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action4_FA290272A0BC4E02A7F91E3E6E53F89B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Any distance learning?,Sending work home with students / providing hardcopies of materials (Cleaned),Country)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Income Group)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='272' />
            <format attr='cell-h' value='272' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Any distance learning?:nk]' value='Presence of Distance Learning' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Any distance learning?:nk]' />
              <wedge-size column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[pcto:cnt:Calculation_277252877258088458:qk:1]' />
              <size column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[pcto:cnt:Calculation_277252877258088458:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{ADD01670-9B87-431A-8C59-DB62C23EA247}' />
    </worksheet>
    <worksheet name='Duration of Closures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Duration of Closures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column caption='Effectiveness' datatype='integer' name='[Calculation_1995657616432259072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Country (clusters)] = &quot;Not effective&quot; then 0&#13;&#10;elseif [Country (clusters)] = &quot;Moderately effective&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
            </column>
            <column caption='Safety' datatype='string' name='[Country (clusters) (1)]' parent-model='[AnalyticModel:{77535841-8210-4cec-a401-a05f5481823a}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Not safe&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Safe&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Efficiency' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{8ddd7938-da1f-4425-abbc-71c9e6df5579}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Effective&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderately effective&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not effective&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Difference of cases between re-opening and time of closure (Normalized)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Duration of FULL and PARTIAL school closures (in weeks)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Duration of FULL closures (in weeks)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Duration of PARTIAL closures (in weeks)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of cases at re-opening (Normalized 1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[School Closures]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995657616432259072]' derivation='Avg' name='[avg:Calculation_1995657616432259072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference of cases between re-opening and time of closure (Normalized)]' derivation='Avg' name='[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' derivation='Avg' name='[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration of FULL closures (in weeks)]' derivation='Avg' name='[avg:Duration of FULL closures (in weeks):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration of PARTIAL closures (in weeks)]' derivation='Avg' name='[avg:Duration of PARTIAL closures (in weeks):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cases at re-opening (Normalized 1)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized 1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks)]' derivation='Sum' name='[sum:Duration of FULL and PARTIAL school closures (in weeks):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Duration of FULL closures (in weeks):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Duration of PARTIAL closures (in weeks):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]'>
            <groupfilter function='level-members' level='[Country (clusters) (1)]' user:ui-action-filter='[Action7_B0C5D761C97A4A229FD16C5720FB0D6D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]'>
            <groupfilter function='level-members' level='[School Closures]' user:ui-action-filter='[Action7_58920D079F724850B4C68F13053B732D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (YEAR(Date),QUARTER(Date),Region,School Closures)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_70AF890F026748D2B551524E4C5A6460]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Date:ok]' />
              <groupfilter function='level-members' level='[qr:Date:ok]' />
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[School Closures]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' direction='ASC' using='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[sum:Duration of FULL and PARTIAL school closures (in weeks):qk]' />
          <computed-sort column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Region:nk]' direction='ASC' using='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[sum:Duration of FULL and PARTIAL school closures (in weeks):qk]' />
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (YEAR(Date),QUARTER(Date),Region,School Closures)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Region:nk]</rows>
        <cols>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{695948C3-08D2-45CB-81A8-F9B7876BED69}' />
    </worksheet>
    <worksheet name='Effectiveness on Managing Covid-19 in the Education Sector'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Effectiveness on Managing Covid-19 in the Education Sector</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{c50f9c7f-e66b-43df-a379-9d60925d2d97}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of cases at re-opening (Normalized 1)]' role='measure' type='quantitative' />
            <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' derivation='Avg' name='[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cases at re-opening (Normalized 1)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized 1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Search Country' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russian Federation&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' />
              <color column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:AdhocCluster:1:ok]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]</rows>
        <cols>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Number of cases at re-opening (Normalized 1):qk]</cols>
      </table>
      <simple-id uuid='{63CCB1A8-7CA1-4EBA-A924-166E5DC1103A}' />
    </worksheet>
    <worksheet name='Effects of School Closure on Controlling Covid Confirmed Cases '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Effects of School Closure on Controlling Covid Confirmed Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column caption='Effectiveness' datatype='integer' name='[Calculation_1995657616432259072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Country (clusters)] = &quot;Not effective&quot; then 0&#13;&#10;elseif [Country (clusters)] = &quot;Moderately effective&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
            </column>
            <column caption='Safety' datatype='string' name='[Country (clusters) (1)]' parent-model='[AnalyticModel:{77535841-8210-4cec-a401-a05f5481823a}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Not safe&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Safe&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Efficiency' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{8ddd7938-da1f-4425-abbc-71c9e6df5579}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Effective&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderately effective&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not effective&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Difference of cases between re-opening and time of closure (Normalized)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Number of cases at re-opening (Normalized 1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[School Closures]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995657616432259072]' derivation='Avg' name='[avg:Calculation_1995657616432259072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference of cases between re-opening and time of closure (Normalized)]' derivation='Avg' name='[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' derivation='Avg' name='[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cases at re-opening (Normalized 1)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized 1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FBCD043F0447461F96A37069B24BD6E4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Income Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region,School Closures)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_0844F6A29B6E408BA690D4C301966BC6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[School Closures]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]'>
            <groupfilter function='level-members' level='[Country (clusters) (1)]' user:ui-action-filter='[Action7_B0C5D761C97A4A229FD16C5720FB0D6D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]'>
            <groupfilter function='level-members' level='[School Closures]' user:ui-action-filter='[Action7_58920D079F724850B4C68F13053B732D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' included-values='non-null' />
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Difference of cases between re-opening and time of closure (Normalized):qk]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region,School Closures)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Income Group)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' scope='rows' value='Rise of Covid Confirmed Cases' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#eff3e3' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Region:nk]' />
              <lod column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e799b3' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Difference of cases between re-opening and time of closure (Normalized):qk]</rows>
        <cols>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]</cols>
        <percentages enabled='false' mode='column' />
      </table>
      <simple-id uuid='{7D537347-EBCB-4A1B-BD61-B872160359F3}' />
    </worksheet>
    <worksheet name='Income Group'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Income Group</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Income Group]' derivation='Count' name='[cnt:Income Group:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_01BCACF3B87743D0B198EDB530D22A72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Code]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_01BCACF3B87743D0B198EDB530D22A72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Code]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_A04AF3DE11F74E119B772A512C25391C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f9eee8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Income Group:qk]' />
              <color column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Income Group:qk]' />
              <text column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Income Group:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7249D39C-CD0D-4025-BFC1-7CBA51B9F141}' />
    </worksheet>
    <worksheet name='Learning Platforms'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Learning platforms</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column caption='TV (Agg)' datatype='integer' name='[Calculation_277252877234704390]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [TV] = &quot;Yes&quot; then 1&#13;&#10;elseif [TV] = &quot;No&quot; then 0&#13;&#10;else -1&#13;&#10;end' />
            </column>
            <column caption='Radio (Agg)' datatype='integer' name='[Calculation_277252877235322887]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Radio] = &quot;Yes&quot; then 1&#13;&#10;elseif [Radio] = &quot;No&quot; then 0&#13;&#10;else -1&#13;&#10;end' />
            </column>
            <column caption='Online (Agg)' datatype='integer' name='[Calculation_277252877235937288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Online] = &quot;Yes&quot; then 1&#13;&#10;elseif [Online] = &quot;No&quot; then 0&#13;&#10;else -1&#13;&#10;end' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Online]' role='dimension' type='nominal' />
            <column datatype='string' name='[Radio]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[TV]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_277252877234704390]' derivation='Avg' name='[avg:Calculation_277252877234704390:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_277252877235322887]' derivation='Avg' name='[avg:Calculation_277252877235322887:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_277252877235937288]' derivation='Avg' name='[avg:Calculation_277252877235937288:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_277252877235322887:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_277252877234704390:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_277252877235937288:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_277252877235322887:qk]&quot;</bucket>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_277252877234704390:qk]&quot;</bucket>
              <bucket>&quot;[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_277252877235937288:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_01BCACF3B87743D0B198EDB530D22A72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Code]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_01BCACF3B87743D0B198EDB530D22A72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Code]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_A04AF3DE11F74E119B772A512C25391C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Income Group)]'>
            <groupfilter function='level-members' level='[Income Group]' user:ui-action-filter='[Action5_1815F5D9D39B4863B7EFDCA07D51F787]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Income Group)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]' value='173' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Region:nk]' />
              <lod column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Multiple Values]</rows>
        <cols>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{56FCB63D-6609-4821-80A7-C371BDB34ECF}' />
    </worksheet>
    <worksheet name='List of countries and regions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>List of Countries and Regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Code]' derivation='None' name='[none:Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='369' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Code:nk]' value='452' />
            <format attr='width' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' value='200' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Region:nk] / [Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Code:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{0D83E853-8BD0-46BA-ADCE-516BEEAE4337}' />
    </worksheet>
    <worksheet name='Percentage of School Closures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Percentage of School Closures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column caption='Effectiveness' datatype='integer' name='[Calculation_1995657616432259072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Country (clusters)] = &quot;Not effective&quot; then 0&#13;&#10;elseif [Country (clusters)] = &quot;Moderately effective&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
            </column>
            <column caption='Safety' datatype='string' name='[Country (clusters) (1)]' parent-model='[AnalyticModel:{77535841-8210-4cec-a401-a05f5481823a}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Not safe&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Safe&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Efficiency' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{8ddd7938-da1f-4425-abbc-71c9e6df5579}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Effective&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderately effective&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not effective&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Difference of cases between re-opening and time of closure (Normalized)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Number of cases at re-opening (Normalized 1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[School Closures]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995657616432259072]' derivation='Avg' name='[avg:Calculation_1995657616432259072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference of cases between re-opening and time of closure (Normalized)]' derivation='Avg' name='[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' derivation='Avg' name='[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cases at re-opening (Normalized 1)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized 1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[School Closures]' derivation='None' name='[none:School Closures:nk]' pivot='key' type='nominal' />
            <column-instance column='[School Closures]' derivation='Count' name='[pcto:cnt:School Closures:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FBCD043F0447461F96A37069B24BD6E4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Income Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]'>
            <groupfilter function='level-members' level='[Country (clusters) (1)]' user:ui-action-filter='[Action7_B0C5D761C97A4A229FD16C5720FB0D6D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Income Group)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='304' />
            <format attr='cell-h' value='304' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f2f9f9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:School Closures:nk]' />
              <wedge-size column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[pcto:cnt:School Closures:qk]' />
              <size column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[pcto:cnt:School Closures:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <percentages enabled='true' mode='column' />
      </table>
      <simple-id uuid='{5C918AB8-9556-4DE1-9485-1CC04229DF7B}' />
    </worksheet>
    <worksheet name='Providing Neccessary Materials to Students'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Providing Neccessary Materials to Students</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column caption='Sending work home with students / providing hardcopies of materials (Cleaned)' datatype='string' name='[Calculation_2596043735711019012]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if isnull([Sending work home with students / providing hardcopies of materials]) then &quot;No information&quot;&#13;&#10;else [Sending work home with students / providing hardcopies of materials]&#13;&#10;end' />
            </column>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sending work home with students / providing hardcopies of materials]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2596043735711019012]' derivation='None' name='[none:Calculation_2596043735711019012:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2596043735711019012]' derivation='Count' name='[pcto:cnt:Calculation_2596043735711019012:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_01BCACF3B87743D0B198EDB530D22A72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Code]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_01BCACF3B87743D0B198EDB530D22A72]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Code]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7_A04AF3DE11F74E119B772A512C25391C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Income Group)]'>
            <groupfilter function='level-members' level='[Income Group]' user:ui-action-filter='[Action5_1815F5D9D39B4863B7EFDCA07D51F787]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Income Group)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Code,Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='562' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#fefaf1' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[pcto:cnt:Calculation_2596043735711019012:qk]' />
              <text column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Calculation_2596043735711019012:nk]' />
              <color column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Calculation_2596043735711019012:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <percentages enabled='true' mode='column' />
      </table>
      <simple-id uuid='{B745473D-F0A5-4F00-B8AF-CE41CA80626A}' />
    </worksheet>
    <worksheet name='Safety of Reopening Schools'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Safety of Reopening Schools</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column auto-hidden='true' caption='Clusters (1)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:2]' parent-model='[AnalyticModel:{14775b9c-ac2e-4e0f-bde5-2535488108d6}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Effectiveness' datatype='integer' name='[Calculation_1995657616432259072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Country (clusters)] = &quot;Not effective&quot; then 0&#13;&#10;elseif [Country (clusters)] = &quot;Moderately effective&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
            </column>
            <column caption='Efficiency' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{8ddd7938-da1f-4425-abbc-71c9e6df5579}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Effective&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderately effective&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not effective&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Difference of cases between re-opening and time of closure (Normalized)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of cases at re-opening (Normalized 1)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1995657616432259072]' derivation='Avg' name='[avg:Calculation_1995657616432259072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference of cases between re-opening and time of closure (Normalized)]' derivation='Avg' name='[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' derivation='Avg' name='[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cases at re-opening (Normalized 1)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized 1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:2]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' />
              <color column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:AdhocCluster:2:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Difference of cases between re-opening and time of closure (Normalized):qk]</rows>
        <cols>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[avg:Calculation_1995657616432259072:qk]</cols>
      </table>
      <simple-id uuid='{4AA0AEF6-C3C9-4242-ADF4-F92D7981C84E}' />
    </worksheet>
    <worksheet name='Safety of Reopening Schools - Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Safety of Reopening Schools</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column caption='Effectiveness' datatype='integer' name='[Calculation_1995657616432259072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Country (clusters)] = &quot;Not effective&quot; then 0&#13;&#10;elseif [Country (clusters)] = &quot;Moderately effective&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
            </column>
            <column caption='Safety (Convert)' datatype='integer' name='[Calculation_1995657616436191233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Country (clusters) (1)]= &quot;Not safe&quot; then 0&#13;&#10;else 1&#13;&#10;end' />
            </column>
            <column caption='Safety' datatype='string' name='[Country (clusters) (1)]' parent-model='[AnalyticModel:{77535841-8210-4cec-a401-a05f5481823a}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Not safe&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Safe&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Efficiency' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{8ddd7938-da1f-4425-abbc-71c9e6df5579}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Effective&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderately effective&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not effective&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Difference of cases between re-opening and time of closure (Normalized)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Number of cases at re-opening (Normalized 1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[School Closures]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995657616432259072]' derivation='Avg' name='[avg:Calculation_1995657616432259072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference of cases between re-opening and time of closure (Normalized)]' derivation='Avg' name='[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' derivation='Avg' name='[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cases at re-opening (Normalized 1)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized 1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1995657616436191233]' derivation='Count' name='[cnt:Calculation_1995657616436191233:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FBCD043F0447461F96A37069B24BD6E4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Income Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]'>
            <groupfilter function='level-members' level='[School Closures]' user:ui-action-filter='[Action7_58920D079F724850B4C68F13053B732D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Income Group)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Country (clusters) (1)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Calculation_1995657616436191233:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{0FEF0A3F-D66B-4EC6-BD3A-F8B9AF6AB3ED}' />
    </worksheet>
    <worksheet name='Vaccine Prioritization to Teachers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#666666'>Vaccine Prioritization to Teachers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc' />
          </datasources>
          <datasource-dependencies datasource='Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc'>
            <column caption='Effectiveness' datatype='integer' name='[Calculation_1995657616432259072]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Country (clusters)] = &quot;Not effective&quot; then 0&#13;&#10;elseif [Country (clusters)] = &quot;Moderately effective&quot; then 1&#13;&#10;else 2&#13;&#10;end' />
            </column>
            <column caption='Safety' datatype='string' name='[Country (clusters) (1)]' parent-model='[AnalyticModel:{77535841-8210-4cec-a401-a05f5481823a}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Not safe&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Safe&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Efficiency' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{8ddd7938-da1f-4425-abbc-71c9e6df5579}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='false' value='&quot;Effective&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Central African republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Micronesia (Federated States of)&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Republic of Moldova&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sint Marteen&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</value>
                  <value>&quot;United Republic of Tanzania&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Viet Nam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moderately effective&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia (Plurinational State of)&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;British Virgin Islands&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Democratic People&apos;s Republic of Korea&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran (Islamic Republic of)&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of Korea&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turks and Caicos Island&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Not effective&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;SÃ£o TomÃ© and PrÃ­ncipe&quot;' value='&quot;Sao Tome and Principe&quot;' />
                <semantic-value key='&quot;Sint Marteen&quot;' value='&quot;Saint Martin&quot;' />
                <semantic-value key='&quot;Turks and Caicos Island&quot;' value='&quot;Turks and Caicos Islands&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Difference of cases between re-opening and time of closure (Normalized)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Number of cases at re-opening (Normalized 1)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[School Closures]' role='dimension' type='nominal' />
            <column datatype='string' name='[Teacher prioritization in vaccination plans]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1995657616432259072]' derivation='Avg' name='[avg:Calculation_1995657616432259072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Difference of cases between re-opening and time of closure (Normalized)]' derivation='Avg' name='[avg:Difference of cases between re-opening and time of closure (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Duration of FULL and PARTIAL school closures (in weeks) (Normalized)]' derivation='Avg' name='[avg:Duration of FULL and PARTIAL school closures (in weeks) (Normalized):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of cases at re-opening (Normalized 1)]' derivation='Avg' name='[avg:Number of cases at re-opening (Normalized 1):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Teacher prioritization in vaccination plans]' derivation='Count' name='[cnt:Teacher prioritization in vaccination plans:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Teacher prioritization in vaccination plans]' derivation='None' name='[none:Teacher prioritization in vaccination plans:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Income Group)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FBCD043F0447461F96A37069B24BD6E4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Income Group]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action6_E93A4ED4A0A140C8A2CD04E6151ACCF8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]'>
            <groupfilter function='level-members' level='[Country (clusters) (1)]' user:ui-action-filter='[Action7_B0C5D761C97A4A229FD16C5720FB0D6D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]'>
            <groupfilter function='level-members' level='[School Closures]' user:ui-action-filter='[Action7_58920D079F724850B4C68F13053B732D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Income Group)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Country,Region)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (School Closures)]</column>
            <column>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Action (Safety)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Teacher prioritization in vaccination plans:qk]' scope='rows' value='Number of Teacher prioritization in vaccination plans' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Teacher prioritization in vaccination plans:nk]' value='199' />
            <format attr='width' field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Teacher prioritization in vaccination plans:qk]' value='95' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#faf5f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Teacher prioritization in vaccination plans:qk]</rows>
        <cols>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Teacher prioritization in vaccination plans:nk]</cols>
      </table>
      <simple-id uuid='{3044CB8A-9920-4891-9C01-0F3D4897DE7A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard Page 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Century Gothic' fontsize='28'>School Closures During The Pandemic</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff62' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#8679e8a2' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1700' minheight='800' minwidth='1700' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Search Country' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='92125' id='13' param='horz' type-v2='layout-flow' w='99058' x='471' y='1000'>
            <zone h='92125' id='51' is-fixed='true' type-v2='layout-basic' w='83646' x='471' y='1000'>
              <zone h='9750' id='3' param='vert' type-v2='layout-flow' w='83646' x='471' y='1000'>
                <zone fixed-size='53' h='7625' id='5' is-fixed='true' type-v2='title' w='83646' x='471' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#f3ebf3' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='82375' id='52' param='vert' type-v2='layout-flow' w='83646' x='471' y='10750'>
                <zone h='82375' id='4' type-v2='layout-basic' w='83646' x='471' y='10750'>
                  <zone h='39575' id='11' name='Duration of Closures' w='44070' x='40047' y='10750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44875' id='109' name='Effects of School Closure on Controlling Covid Confirmed Cases ' w='24781' x='471' y='10750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42800' id='112' name='Countries&apos; Income Groups' w='44070' x='40047' y='50325'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='37500' id='181' name='Vaccine Prioritization to Teachers' w='19786' x='471' y='55625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44875' id='182' name='Percentage of School Closures' w='14795' x='25252' y='10750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='37500' id='222' name='Safety of Reopening Schools - Bar' w='19790' x='20257' y='55625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='262' h='92125' id='12' is-fixed='true' param='vert' type-v2='layout-flow' w='15412' x='84117' y='1000'>
              <zone fixed-size='65' h='9125' id='14' is-fixed='true' name='Duration of Closures' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]' type-v2='color' w='15412' x='84117' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7000' id='50' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15412' x='84117' y='10125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11625' id='183' name='Percentage of School Closures' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:School Closures:nk]' type-v2='color' w='15412' x='84117' y='17125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14250' id='270' name='Countries&apos; Income Groups' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Income Group:nk]' type-v2='size' w='15412' x='84117' y='28750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='71' h='9875' id='223' is-fixed='true' name='Safety of Reopening Schools - Bar' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Calculation_1393582637183160320:nk]' type-v2='color' w='15412' x='84117' y='43000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='5875' id='43' type-v2='dashboard-object' w='99058' x='471' y='93125'>
            <button action='tabdoc:goto-sheet window-id=&quot;{3DD6842B-058E-4CD0-910A-8E2E53662EC3}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Next page</caption>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#fabfd2ce' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3000' id='53' type-v2='dashboard-object' w='1412' x='81824' y='1125'>
          <button action=''>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{468F9AFC-A20D-4CA3-89E6-1B4C09728C9F}&quot; zone-id=&quot;53&quot; zone-ids=[12]</toggle-action>
            <button-visual-state />
            <button-visual-state />
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Century Gothic' fontsize='28'>School Closures During The Pandemic</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2250' minheight='2250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='320' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='319' param='vert' type-v2='layout-flow' w='99058' x='471' y='1000'>
                <zone fixed-size='53' h='7625' id='5' type-v2='title' w='83646' x='471' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f3ebf3' />
                  </zone-style>
                </zone>
                <zone h='7000' id='50' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15412' x='84117' y='10125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44875' id='109' is-fixed='true' name='Effects of School Closure on Controlling Covid Confirmed Cases ' w='24781' x='471' y='10750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44875' id='182' is-fixed='true' name='Percentage of School Closures' w='14795' x='25252' y='10750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11625' id='183' name='Percentage of School Closures' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:School Closures:nk]' type-v2='color' w='15412' x='84117' y='17125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39575' id='11' is-fixed='true' name='Duration of Closures' w='44070' x='40047' y='10750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='9125' id='14' name='Duration of Closures' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]' type-v2='color' w='15412' x='84117' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42800' id='112' is-fixed='true' name='Countries&apos; Income Groups' w='44070' x='40047' y='50325'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14250' id='270' name='Countries&apos; Income Groups' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Income Group:nk]' type-v2='size' w='15412' x='84117' y='28750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37500' id='181' is-fixed='true' name='Vaccine Prioritization to Teachers' w='19786' x='471' y='55625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37500' id='222' is-fixed='true' name='Safety of Reopening Schools - Bar' w='19790' x='20257' y='55625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='71' h='9875' id='223' name='Safety of Reopening Schools - Bar' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Calculation_1393582637183160320:nk]' type-v2='color' w='15412' x='84117' y='43000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5875' id='43' type-v2='dashboard-object' w='99058' x='471' y='93125'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{3DD6842B-058E-4CD0-910A-8E2E53662EC3}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Next page</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fabfd2ce' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{711C21C8-5747-4A18-89A7-458CEA3761A7}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard Page 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Century Gothic' fontsize='28'>Learning During The Pandemic</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#9cd0f0' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1700' minheight='800' minwidth='1700' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='83' param='horz' type-v2='layout-flow' w='99058' x='471' y='1000'>
            <zone h='98000' id='81' type-v2='layout-basic' w='81293' x='471' y='1000'>
              <zone h='92250' id='10' param='horz' type-v2='layout-flow' w='81293' x='471' y='1000'>
                <zone h='92250' id='5' param='vert' type-v2='layout-flow' w='81293' x='471' y='1000'>
                  <zone fixed-size='69' h='9625' id='7' is-fixed='true' type-v2='title' w='81293' x='471' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='82625' id='6' type-v2='layout-basic' w='81293' x='471' y='10625'>
                    <zone h='48500' id='79' name='Learning Platforms' w='32882' x='48882' y='44750'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='41313' id='80' name='Distance Learning' w='14930' x='471' y='10625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='82625' id='125' name='Providing Neccessary Materials to Students' w='33481' x='15401' y='10625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='41312' id='177' name='Income Group' w='14930' x='471' y='51938'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='34125' id='284' name='List of countries and regions' w='32882' x='48882' y='10625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='5750' id='50' type-v2='dashboard-object' w='81293' x='471' y='93250'>
                <button action='tabdoc:goto-sheet window-id=&quot;{468F9AFC-A20D-4CA3-89E6-1B4C09728C9F}&quot;' button-type='text'>
                  <button-visual-state>
                    <caption>Previous page</caption>
                    <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                    <format attr='background-color' value='#a0cbe8' />
                  </button-visual-state>
                </button>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='302' h='98000' id='82' is-fixed='true' param='vert' type-v2='layout-flow' w='17765' x='81764' y='1000'>
              <zone fixed-size='106' h='14250' id='84' is-fixed='true' name='Distance Learning' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Any distance learning?:nk]' type-v2='color' w='17765' x='81764' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='85' h='11625' id='126' is-fixed='true' name='Providing Neccessary Materials to Students' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Calculation_2596043735711019012:nk]' type-v2='color' w='17765' x='81764' y='15250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='65' h='9125' id='178' is-fixed='true' name='Income Group' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Income Group:qk]' type-v2='color' w='17765' x='81764' y='26875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3000' id='138' type-v2='dashboard-object' w='1412' x='87765' y='1000'>
          <button action=''>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{3DD6842B-058E-4CD0-910A-8E2E53662EC3}&quot; zone-id=&quot;138&quot; zone-ids=[82]</toggle-action>
            <button-visual-state />
            <button-visual-state />
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Century Gothic' fontsize='28'>Learning During The Pandemic</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='314' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='313' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='69' h='9625' id='7' type-v2='title' w='81293' x='471' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41313' id='80' is-fixed='true' name='Distance Learning' w='14930' x='471' y='10625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='14250' id='84' name='Distance Learning' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Any distance learning?:nk]' type-v2='color' w='17765' x='81764' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='82625' id='125' is-fixed='true' name='Providing Neccessary Materials to Students' w='33481' x='15401' y='10625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='85' h='11625' id='126' name='Providing Neccessary Materials to Students' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Calculation_2596043735711019012:nk]' type-v2='color' w='17765' x='81764' y='15250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='265' h='34125' id='284' is-fixed='true' name='List of countries and regions' w='32882' x='48882' y='10625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48500' id='79' is-fixed='true' name='Learning Platforms' w='32882' x='48882' y='44750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41312' id='177' is-fixed='true' name='Income Group' w='14930' x='471' y='51938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='9125' id='178' name='Income Group' pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Income Group:qk]' type-v2='color' w='17765' x='81764' y='26875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='50' type-v2='dashboard-object' w='81293' x='471' y='93250'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{468F9AFC-A20D-4CA3-89E6-1B4C09728C9F}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Previous page</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#a0cbe8' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A3E93506-9F0E-4CEB-B6F4-7E94C3C3041D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Effectiveness on Managing Covid-19 in the Education Sector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B03F9F84-0863-44A8-8299-DC055C52C321}' />
    </window>
    <window class='worksheet' name='Safety of Reopening Schools'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:AdhocCluster:2:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{886F8B04-B6BC-4FCC-81B5-468DE187153E}' />
    </window>
    <window class='worksheet' name='Countries&apos; Income Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Income Group:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DA25587C-22CE-4F2B-8674-1F94F26D1082}' />
    </window>
    <window class='worksheet' name='Duration of Closures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BE12AAC4-69B6-464E-8133-017AD1C4A3FD}' />
    </window>
    <window class='worksheet' name='Effects of School Closure on Controlling Covid Confirmed Cases '>
      <cards>
        <edge name='left'>
          <strip size='136'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BA1A0046-5AFD-4F6C-AD33-7987D7F8AD6F}' />
    </window>
    <window class='worksheet' name='Learning Platforms'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FF35BD78-7176-43AC-BB4D-F56EDE5DB6B0}' />
    </window>
    <window class='worksheet' name='Distance Learning'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[pcto:cnt:Calculation_277252877258088458:qk:1]' type='size' />
          </strip>
          <strip size='160'>
            <card pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Any distance learning?:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D612525C-499C-4E29-B22B-EA10480C61BC}' />
    </window>
    <window class='worksheet' name='Vaccine Prioritization to Teachers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CCE32DA2-1D18-4CF8-8869-6CC1E34D4BE7}' />
    </window>
    <window class='worksheet' name='Percentage of School Closures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:School Closures:nk]' type='color' />
            <card pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[pcto:cnt:School Closures:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A7F146BF-0041-4E80-9344-BCB82934BE2E}' />
    </window>
    <window class='worksheet' name='Providing Neccessary Materials to Students'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Calculation_2596043735711019012:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8E5777EA-89EA-4A9C-936F-51CA6D719CDA}' />
    </window>
    <window class='worksheet' name='Income Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[cnt:Income Group:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AA7264B4-39BD-4438-BDB1-8BF5DCC1E38A}' />
    </window>
    <window class='worksheet' name='Safety of Reopening Schools - Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[Country (clusters) (1)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{03A03932-6869-4080-96A4-FC3E66F0E24E}' />
    </window>
    <window class='worksheet' name='List of countries and regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Any distance learning?:nk]</field>
            <field>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Code:nk]</field>
            <field>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Country:nk]</field>
            <field>[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCF2C85B-8917-43D2-A639-62238ACE90C7}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard Page 1'>
      <viewpoints>
        <viewpoint name='Countries&apos; Income Groups'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Duration of Closures' />
        <viewpoint name='Effects of School Closure on Controlling Covid Confirmed Cases '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Percentage of School Closures' />
        <viewpoint name='Safety of Reopening Schools - Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vaccine Prioritization to Teachers'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{468F9AFC-A20D-4CA3-89E6-1B4C09728C9F}' />
    </window>
    <window class='dashboard' name='Dashboard Page 2'>
      <viewpoints>
        <viewpoint name='Distance Learning'>
          <highlight field='[Assignment-node-Final Dataset-bb1b7e4417e549e5a028355c141801dc].[none:Any distance learning?:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Income Group' />
        <viewpoint name='Learning Platforms'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='List of countries and regions' />
        <viewpoint name='Providing Neccessary Materials to Students' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3DD6842B-058E-4CD0-910A-8E2E53662EC3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countries&apos; Income Groups' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Page 1' width='192'>
      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
      B/Tj/WOIPl7DAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard Page 2' width='192'>
      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
      kX2AzjE/oXj+x2b3sJv0lLpzM5a36Y3os3xAS+PpiKZSnBzuJZ6nVaFHBKChsdSEkglOjfTn
      RQSaADQKgmgqxZnRAUKpxJLVqRNFTQAahYOsKFyZHGUwHHjyxYvEZTTxXHm1JgCNwmMkHOSa
      bzwn+wSSILDeXcoaVzGiIGgC0ChMZEWhN+ina9qflWMToiBQb3fR7C6Zccy5iyYAjYImrSiM
      RkIMhANMRiNPfZTaZTRRY3NSY3dilB7d99UEoLFskBUFfzyKLx4jlEoQS6VIKmkUVUUQQC9K
      mCU9NoMBl9FEqdk6Z6OfjSYAjVWNthOssarRBKCxqtEEoLGq0QSgsarRBKCxqtEEoLGq0QSg
      sarRBKCxqtEEoLGq0QSgsarRBKCxqtEEoLGq0QSgsarRBKCxqtEEoLGq0QSgsarRBKCxqtEE
      oLGq0QSgsarRBKCxqtEEoLGq0QSgsarRBKCxqtEEoLGqyQibdWWkcPK3amgsBRkCuDoSyZcd
      Ghp5QRsCaaxqNAFo5AWzQaLcrseiE554bUOxKWcNdVnlCdZYOXiKzFgVmdZKK1eGIlgMIpG4
      TKnDSDCSRDRIjE8lqHYbURQVRIH1pWaCkSRxROREiiKbgclYmia3kUF/jKmEQn2RCYteZMAf
      w2034tQL3JqI4SkyY5ZgZCpOkcOEkE7TO53k/wNw6Heek7GaqAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distance Learning' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Duration of Closures' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9V3BdV3rv+dvp5ADgIOdEgGDOOYAUgyQqq9XqVtvdtu91bJfvVM08TU3N
      w9SdGtf1+HrsLtttl+12t9t251akRDGTYAZJACSRcw7nADg57TAPADMoghTVosDzq8IDzt57
      7bX23v8Vv299gmEYBilSPKOIX3YGUqT4MkkJIMUzTUoAKZ5pUgJI8UyTEkCKZ5qUAFI806QE
      kOKZJiWAFM80KQGkeKZJCSDFM01KACmeaVICSPFMkxJAimealABSPNOkBJDimSYlgBTPNCkB
      pHimSQkgxTNNSgApnmlSAkjxTJMSQIpnmpQAUjzTpASQ4rHQNO3LzsITISWAFI9FIpH4srPw
      REgJIMUzjZDaGS7F4zA56uX6uxe/7Gx8buQvOwNPFF0lFouhimZsZhlREGZ/ThDXwKwoiKLw
      xG6nJeNoSCiyjDCvZDXi4ShJwYTNZvqNNb+GrhJPJBFlMyb5ydxVUzWmBrxPJK0vk4XVBfK1
      8t6//y3f++kFJmO3B2nh7jp+caweb1h9zIQ1wr4JJkMx9Dvay9Grp6hr7iIy3/FgvJtf/f3f
      8v1/+ZiB32AXOhkY49L50zQPBX9zN/2KsLAEADjKV7Ao0cuVQf8TTDVK95ljXOgcR/0cHcZQ
      Zwu+6v3syh+irT/65LL3EExpBWyv3ceqEvdv7J5fFRZWFwhAzmDZJjMXz11joqyWrPtKaKBG
      p+ltbqC5b5KkYKN0zWZWl6QhAv6BDiZEN4XuJJdPN6CmFZMuDXCmuYPgYJhAuwtnRjGrt26Y
      SS0RoLehjs7+UQxrFotXrmFRvhPpvowF6WwJUbWyiIJ4EZ3tfUQrF2OdPTrVfppOLR918AbD
      ARVn6Wo2lcncqL/CcMAgraSGNcsqSbdKaMkQfU0Xud43hWpKY9HKtdQUuJGNOCMjg0QED1n6
      IBcaO8lc+wrLnVN0DwxjzV1MUboJQ1fx9TRw+UYfQdVMdtVK1lcXYCJM3/UrtPR6iWgCjuwq
      NmyswWO+vzQLhQXXAgBY8tawwdPDqeap+44ZySh91+q42BUhs6SSikILXUff5cJgHIDwaD/9
      A9c4crCOKWsu+flZZOUVUZiZTlZBKYuqqykvycMuA0TobGigY0qktKICjzRFS0Mj4+E5MjU9
      QIuWQ3WWFXt2FenhNkbuOG+q6yLHL7SiugqpKE3HW/8JP/+0ESOjlMridKb6OugankYDxpsO
      c9VrpahyESUelabjZ+nyx0GP4x3ro/XyRequ9CJkFJFtF9Ci0/T1djIWmOkCxgfP8/6xDpS8
      CipLslEjIdSkSjIxzsiIRmZxBVWLSnBMXuHjqyNP/P08TSy8FgBAsFK6ZTVNP62jt/olPHcc
      ikd89HVPUbXj66zKNSORpNAS4BenrrP0nbVAjLaLfSza+wpbKvKwmiQEHJRmNyMXV7JseTGm
      2WojiIXiZWtZu3wZWXaFyIhCfdsooThgvzNDBt6+XuScQtIsFqxSOm5XlL6hAGVVLgRAVMxU
      rtnJhiU2TGKA2I0ORmvWsG5ZHoowSTJ8HSJxdGOUG60W1r62hkKLDNoiPLGfca4zSPUqE4RG
      6Bi2sWvfThYXp2OSBBLxO/OSoO1cA3k7fpttlS4UQSeR1FAUBShizc4CZLOCKBiomSEa6ibQ
      NhXO0aItDBamAACzawnrV7ZzpX6AnXcoIJEYY3oyl+p8y2zhTTgrqsg52sk0a5GRKd24gw0V
      BdhMD5vaETHb7NgtJgQBJFFGkgTuGyZoPrq6wijpCaZ8o4SNKBomprp6CVauwCWCIAhYbA7M
      8ky6kiRjtdkwScLM/6KIDhAaoOnKSU52XLjro8zdEQZMYM1l+ZpqlpZ7HvByh+hs87DsbTcm
      ACTMs12chH+CqycPcaF5iEBMw9CihB07mGb1XZXIQmLBCkAQZTLLluE820inoGBgAUAUTMhy
      jETCgJsfeCxCVDHNPgwZs1l+otOlCe8Yo+Fxege9jLbNTs3GY4i5dib8S3ClP8JrEGTchVv5
      +p++TKFyz7GkHyQJWVA+48XacLjixKIGWO8uo7f5KK3SBr79Z4vJsMkIvvN87z8W9szRghUA
      gogjvYCC3AHaOnqJeJYDYLLk4Mm8SvuNIbKX5WPRp2m/0ESycicZwOScickoJo3pqRCqrqMY
      Bro4305BEu+oDzl7FW+/uZk820z/SfX3cersdbwT05SmZ86/XI4SyqwnOd/Yz/MrC7GLKiFf
      PxMUU54+nwQ8VC3VqatrpnD7YtIVlcmpCG63k3g4hD07H5dFJBmcoKe1h0ByXol+ZVm4AgAE
      s5OSkkI6rl1ifDoJgGJNp2rFYs7VH+VnDTogYPGUUbuzeLaNmAsT+YsruHbqPD/9t4u4sqvY
      tHvLvPJgxIOMTIZQ3ItJt96ec5AdHnKtIgO+CSLqIwiAdFbsXsfxC0f42TUBUZSxODNYsqlw
      ntfLFK7bSf7JSxz86SU0ZGzFK9m/aTFppctRT/6SH98wYbFnkO1UEea3wveVZWGZQiQjTEV1
      bDYb5tkVT0ONMT3pI4SDXI8LRZpZGQ5O+5gOxdGRcXpy8DhNCEAi5CcqmHDYrEh3vHtDi+P3
      eZkOJ5AsLjKzPUjRu8/Vk1HC0QSyzY1VvnldklAohC7bcdln7jGDTjwYIGIoOB12tOAoUXMu
      aRYAjZDXh+rIIM0iAyrhQARkC1abCUFLEJzyMhWKoyNisrrJ9LgwizqRaAQVCy676fadkjGC
      4QiS1Y3DLGEYOvHQJL7JIAlDwurOINNtR9TjTE+ME4jpSGY7aS6FUEggM9fNvb2ticExzv79
      oS/iLf5GWVgCSPEbwzc0waUfHf+ys/G5SQkgxWMRjUaxWq0PP/EpZ0EuhKVIMV9SAkjxTJMS
      QIpnmtQYIMVj4Rue4Mp/nv6ys/G5WdDrAE8aPRlheipALKmDKGKyOXE5rCiSyBOfLdci+EIC
      Hvf8BpqGYRAPTjAdl3GlpWNT5pEjLU4gGEO02LBblEcqg67rRCZDj3DF00lKAPPEiE/RfuUi
      V9oGCMY0ECWs6WVs3LGBypy5zJ8fgeAwN6btLC26w17ff4OfHJb47ttr5pc/LUbzR//Eweki
      ave8ztZFjod/0NFJWq/3YC2tYUlh+oI1ePssUgKYJ6G+ek53aNQeeIeKTCt6PMBw9xiGbNxv
      /PaoDF/ipw1l/F9vr3jsJPTYIL2BItYvzSc8MkCkogb7w0Z4jjw2bMt77HsuBFICmCfxUICk
      u5g8txlREBAtboqX3K6xdTXGSPslLjb0MJ2Uya5aT+2GCuySSHC4jU5fkuLKZXisoEUDdLdf
      I5mzFMdQPefONeKf6OIHP7gMrgI2bNzEUhtgJBm5cYrz13rxqzYq12xhXVUeFvn+uj3S14iv
      cBNb8v00dY/hC1djd4pgaIS8PVw+c5HeqQSiLYtlW3ewutAJoTEud47iKaikNMuOmvDTdeUs
      jR3jhDUBZ+5SdtSuJNuycD+T1CzQPEkrX0r28Bl+/O5peibC3OUGbBgE+s5z7NwoWUs2sn3r
      Miw9R/n1hTF0IB4YY3B4hMiMORK6GmNiuJvRgEBm2XK2rCjBVric2tpaajeuoDBjpt+vdZ7j
      RL9I5eqtbFnspqPpOkPTkTlanChdDWOUrSwlK9ODSJJJbwAd0OIRupvO4XXWsHnndjbWZDEx
      MuvMnggyODSMLzSTsWRiAu+0k5r1W9m5fQMl6nU+vDj0hT3Tp4GFK+0njOyu4tXvZHDtzDF+
      /f2/RE0vZ1PtLtZU52KXoevKZTK3/jGbq6yIgkFpnsBPvnearg1f58H2lCK2jBxsOWkoIzmU
      lZXdPhQDqXwzb+5ZhyyLCIaVgb421OT9jv16oJWrgSpeyVeQBA85QitjExNEi92YdY14PIGz
      qJiCXDuKUkLZAwzcLLZS1m7LIaHpGBikLyng7LkJVEoW7IeyUMv15BFEFFs2a/a+zaraKCNt
      Fzlc9wkJfT/bl1rxjlvJybEhiQACsr2MEs9JfH4+QwAPQVIwKdKt+990UTDgjgGuxuSN64w5
      8vB1tOEDoqqPniE7y2rKsNlsFJdW0HL2V7zXUURJUR65ReWU5Trva/7j0wOcP3WalgEfkYQO
      yQAT4kb8kHKIeda5uVwiCAKiYqNg2Ra2+8a5OjlFTE3DYk0Qiapw07lFCxKIWCgwf8EZUye5
      0RnDow9x6dLo7I8xAr4RxkNhchxucpbs5FuV65keG6az/SpHD07yxu/t4l4jbF/rSfpsm/nG
      f60kzSqlHGJS3Gaq9zq9YQulFaVkWCTigTEGJhKYi60okp2iRWmcudzEIucyMm0Jhq6cYcC9
      jM12EGUZNREiFk+gJVVGuppoH4pSXDGbuMWK2TfKeGIZmfJM/T7fwVlyoodeuZIDL2+hwDGr
      NiPMjY/eo2M0xOIMM2N9HSi5VWQXVrDSHqWjsYsw3CeARCSC4krHbhJI+Edob2xjOpnzRJ7f
      00pKAPPEbBKZajjPhVOHSGogmx3kli5lfVUBFgkKlu2i9PRp3v3hGeJI2DNK2Pb8ctIF0HKK
      yW7t4tP/+D6GYiMzJweL7Y5Hn7ucLWkf8JN/+FukjDJ27NzBctt8cpVguGsIa341btMdFvuC
      jbIqD8cah0gsTiPq6+LkqTNMR1VEi5PybbXkzpFaxqK1CId+yj/Ui9jceZTnmTClHGJSwOz2
      gtEIkVgCTQdRkrHY7Fhnt2A0DJ1kLEw4Ekc1BBSLHafdjCQIYGjEo2HCkcSMA4vFiiyoCIod
      q0kEdBLhIMFoAkMyY7fbsUoq/ii4b9bqqETDSSSzGUW+ufKsk4hESIpmrGaFO92YDTWKPwou
      hxktESUSjpHUDJAUHC4nFlkELUk4nkRWzJgVCV1LEg0GiKoGomzGZpGIx8Hhtt23SJZyiEnx
      TDM54qXh52e/7Gx8blICSPFYpBxiUqRYAKQEkOKZJiWAFM80qWnQFI9FeDLIsX9+98vOxufm
      yxGAFsM3PobPH53Z7xIACXt6JtmZ6Xyxu3EbJKMBxkd8iOk5ZKXZmcO48j7UkJfBkERRdhrS
      I2ybaGgJApNjTExF0JCwefIo9Njvt9XXNSKTw/R7Z7eMFkQUs5OcghwcyuM31En/KCNRG/m5
      rpmXbagEx4cZmZ7ZJyg7NwumRwiZssl1m+cZ6WZmZVyNJx87X08LX44A4mNcqjvBwJSBzX5z
      AcdEbtVKXBmPL4Do5CBjYZGs3Hzs9+7kdBNDZaKviU9+dQbTxn28uG01HvPD33rSP0zLoJk8
      jwtpvtsiGhqhsXbOHL/IqGbCLCaJ6Nnse/0AJc57ztVi9F/5mJ9cg0W5dkAEXSW9ZC2bNi8h
      40HleQhxXx+t3hyyZgVg+Ls4duwSQV3AmVPGmrR0GOxgyOkkx21+8p5tTzlfXhcoo5Ldm5dT
      Ueh6YkmGhttoHJFZn/ZgAejJGNM+H5nLVpKIB/AHYmRkWR/64q0FK3ih4BEzpKtMjvTglao4
      8OZmssQAV3/5z5zt2UXJijmWei1pLNq0mW9tLZoRz3gHRz48RlNxObWlD9648bNwlG9kX/nt
      /8N9TXTZVvGnLy+7tc07a3ZT9Fipf/V5OscAeojmk4c41zJMWFdIK17B7h1rKEizYMSDdF89
      zskr/YQNGU/ZRl7aU0O4/TTvvVfHUFyg/VojVouJta/8EZvv2TIzGQ3gHY1SvHkjkYtXGA8E
      KM60znSDtBDdjec5e6mNyTh4ylaz67lN5NtEwj3nOenN4rnVZZjFJL6+G5w9e4X+yQiGksHK
      vS+xtSLt7lkFUcLqysJjiWOIEqLJjlUx4Xxg83QHgoQ9q5LVVRepn46BDqOtlzlz8TpDgQTm
      9BLWbd3GyvIMZEBPhrhx6kPOt46TMOewenstaytziHcd51hgMa+ts9F8/AQnT9czpHbx/b5j
      uAqq2b57B8b1s0yVrGVtURoiGv7hNs7XnaNzPII5ewkvvPwcBfMyzfjq8eUJwNDRNA1VvW3f
      LogioigiBIcZMUqpfW0bLinJYMMp6ho9vLy5kvhEM00tAutfeoscU5zJ3n6GQwqVlZvYuytK
      /bjEitUbyXYIWOdoXKL+bkaSZSzPzSFeoHJqxM/K4mxkBab72mkeCFKz63WK3QKT4314x8Lk
      lzlRQ+MMeC1oOqDGCIYSZK56jvVZDogMc+bTX9CU9l9Y5bmjLREkMgrKye6vp6WpgzitXLDt
      5Osl8xCAYWDoOtPTfkwZCsT9jIbMVG59gR1pFgLDrVxrOoPd+QKLMwW6jv6QE4E1vPzmLpTo
      GL6kgaZC0j9Cn68YyKZ8fS0WfYxIcD3vbCtCVMzYHSrNo8N4PcsBg/BYJ6dPnUcs28obu9KI
      eTvxT5ESwBNntJGfnDwKtwZ4bpbu3MfenTW43JVsWTeFPxQjnoSsTDfnh0OoqoauaaBYsJhk
      LE4Xi9YXIYkCguDE7bJjDcukZWSSeW8fGwCNieYbyDXvkC6KUFZM4OM+plaXYlVkNE1Hlk0o
      JhnF6qR8aS7KXANes4vCquW4/AGiiTiGnEG+J8yIT2WV5/bHbRgGscAkk+PdXD5ZT9OaF/j2
      80ux6BH8Uxo2t5O7xrd6knBgnMFBAQyVqZ4LXPAu4cB+O5hsLF1hI+APEY0nMFscWMwBpoJR
      sHVzqqOCt7+7mWwRIIebvbXbofgkLA43aQ4LJs1NZuZNW9A7zJ31GGNjAxjpG9m5cTF2Acie
      y2xu4fDlCSBvNd+qnXsMkJzs5PTJy4z4QsR1AyJeuiwyugEuTyXFmce4dOwEabmZeNxZLFpS
      g8c6j+FbcpTGxnGSpnbq6wGmkQaauTa+ifwyE2n5xeQODXH93HH60/PIyvFQWL6IArfprmTU
      eIDupnNcbR0hGE+i6wZhf4D8shB3ur/oiQCtly6RrHiR76wZ4ez1CUamIgRHz9A4lsvWPavJ
      uFMA8SD9Tac5OGwDQcaVU8mLX99GgQm08Dg3rl6mtXOUQEKFZJRxzcHWkhhMjDOcmTn78X8O
      VJVoMEgivWbm438GeCrHAOMNdYxl1fLGi6U4zSIMnuWvzs50lUyObNbue4ul4Wkmhvtov3KG
      U+YiXl82Z5V/F/HBBnrMZVQFh7gZMje90KD1+ijPlTmR7dms2vkSSyNBxscGabnRwMVpKy/u
      umMUiUFkcoz+/giL97/F0iw7kgCtn3yPpnvul0x6GRu2snhfOQWmfLZETlJ35hiyobB8z3Iy
      7n361gxqds4Ogu8h0N9BT8jK+pe+SbnHghAa5vi5yzMHXS7SQyGCOjg/jwgkCZPVihKIEjdg
      HpNjX3meypXgWCSMaLZjlSE2NcjlphZ8gRgYOsHRNq51TIA1ncKKasrcCabDM6sJikkhHAgQ
      jEbRtSTJuzzX4/Q2dFP83Ou8+uqrt/9e301azw2GVRX/WB8dHUPEFCf5pdVU5JoIBaL3OKEb
      6HqCpCZgMZsR9BhjHee42Ha/55QoWJCkSYaGpknqCu4MG97uRvqmrDhtj/bok4k4uihjM8vo
      iRA9rVdp7p2NZ+OuYrW1hU8u9BJWNdTIOMPjAR55ml4ykZGRhTbSwPX+KVRdIzrVw6DvEdP5
      CvHltQAjDfzn6WOIpptz6mZK1tayr3YthRt2IP7iR/zlEQNrZgnLC2xYLAogIEo6w5c/4Oh7
      XmKGGU/pSl7Y4QDAWbCIyq6jfPyD/493FSc7v/6n3AqcEunlcl826164ezQnOBaxLPMI13o1
      at0aI80n+fj9MUJJkcyyVezYXYEZuB1oUcCRkUteRgOf/MP/S0xykb9kFYW5Vrz3FFGxZLFs
      fTGffvCPnImAK28xG1/9NkrvBU4erGfP6xvu88p6EOllVeT0HuEnf3sa1ZxJRUURGZkz5UZK
      Y/X+54gcPcT3T06iWTJYsfMFdmQ86hSzRFpBNWuW+qn7+F85PBnHmlPJ82+UPfzSryhfjjm0
      oaOqKqqm3/WzKMnIsoyITjKZRNMNBFFCFgU0AxRZAgw0VUXTdAwEREmecRARBDAMNE1F1TQM
      BGTFjHyzojU0kkkDSZEQ71ruNNDUJLqgIIt3pn1HfgQwNJWkIaBIs5FnNJWkOnMfUZaR0NAF
      BeWusDLGjKNMUkU3DARRRpkJUYOmC0iKfLsJNgx0XUVDunWPu5+ZgaYlUVUdQxCQJGlm7UKQ
      kCUBwzDQ1SSqpmMIIrIsI4ki6EmShoTpZsQc7e7/wUBLqhiihCSKCMzkWVXVW89fUe52toGU
      Q0yKZ5zJMR8tH17+srPxuUkJIMVjkXKISZFiAZASQIpnmqdyHSDFVwADtLvnmb+SpASQ4rEI
      TQYWxCzQwwUQ9dHRM0jIUsCq8sy7zYaNEL3XOggoaZRUluFWIDHZR1vAzvLSOWa4DY1QwEsw
      6SQvcw7rqugUg0HwpLuxSjp+3wh+wUPxXOc+iIiXtp5BgtE7N5G1kltRSl66/QsLAmFoSfzj
      ffSN+Eki4cguoTI/Dfne+UPDIOYfoGMggqeolLw0y8wz1VUCvmGmhExKHqW8D0FLJpgeH0HO
      LsH9mD4FC5mHjwEmOzl1qY5D79czefe0PfpUCwcPn+bMp6cYiMz8pkX9jE1H5k5LTzIxcJ2r
      7Q9YWvT3cOFGN9MRDdQYQy3nONsx+QjFAXxtHLt4nd7+IYaHh2f/JghEE+gPv/oBhOlvbKV/
      MjR3GoZB1NfO2SOnuNY1wFB/G2c/PUKLd66lWIPA8GU++ugUTdd7CN/UqRZnuOU8dW2Pu+xq
      EAuO03mthcnE7V+1WITO+jqGog++8llmXl0gW9Ea1iUv0Tiyj90FNzWjM9HSgnnVJvK6W26d
      ay1YwZ5HdRx5wtiKV7N/62KclidV34foa2hFsKeTn+GYs9YIT/QwrJVz4OXt5MhR2j/+Iee7
      AyzPnqMlVGzkFRUhBQfoGy+iJn/uNB+VeGicjqZ2KstqyDA9/PwU8x4D2KhZW8B7DX3UFpTN
      vCzdS3OrlWXPu5nsvn1moPkTDk4v4RtbigHQQ6NcPn2EM9f6iRoK5rQ0SpdXzZ6tE+w6x88/
      qmMkDE6TQaJwG1sekIvEZCvv//wjOid1nMUr2bd3CxXZj/bxhIau8MnHp+kaD2FYPSzZfoDn
      VxdikgyCQy2cPHyE68MhBEsWG1/5Bpsypjjz6c850jgGXQ2cMFvIKtrKq9/eftf+muaMInLN
      QySREGUT6DIZ6Q/y4hKxZhVQZB1icHCA4qwa7jfl05lqP87PP6jHm5DJXbKJfbXrKXCb0OMh
      ehpPESncjrX3GEfORVi/08zBD68QCsY5192CWXSx7mvvsDNfwtCijLbU0dhwiT5fgsw1r/Db
      z9fwRW9c/VVg3oNgS8Vayi810BkpZJFNJN7fQU9OJW/YZM7dcZ4anmQ8EAcMtNAIF46dZshc
      wzf+6A3cQpi2xnP0AaARbD/Bjw9PsPnrf0K1WyLef4mPeufuqKrBVn794zpy932dLS6d0Wt1
      HDl2EduL28h3mebtyxrwTpGz7gU2ZTsh0seJ9w5xqegdtjgjtLe2ECuu5dsvFWJRA/QOjJCs
      WMTON7+BGL2AsGkD68uzUQTprgdnAFZnLoWFI7ReukbM3M9l2xZeKVGIhKKY7Nb7HO8Fyc6i
      JSW0nR9mYDSX6pw7q2yNYOtx/uPkFLXf+hPKHDE6L57g5MnLPLd7PVmSRtQ/RMv4FaxyGs9/
      ew9F6QolWWWcP9lBxYFXqXCAJCtokSmmJnrpNarZ9+rv8ZozQt2//YiTvTXsK53nQ1vAzH8W
      SCpgXW0Xx442U7Avi/qGGOs3LMGsTD/gApXx/lFURwW7d63FIwCaiDvNjhIAGOHMBYP933qF
      8rSZQZ/V7cRimntheujCUVpDEYY//gVX7sj+WDxGPvNt71UQYPjKca4GImg6RCb70PpVtq51
      UlCYR+fZeo5ODVBWUEhecTkWQURWFGRRQlBMmM3mOR5ako66g7SaNrGtyM/Fa7BiQzGxgXOc
      alTY9upWcubQteRZzMtbDX720Rms+7ffcWSMc4en2fDO8yz1OAEnK3bvIvhvZ+iZmsaTqaBj
      InfpFnaW3UzYwGRSkCUZxWzGPFu960hk5NZQsms7FS4AN0urHVyKk4JHmgYVsGWWkXWtiY6O
      JOGMNKodDkQeJAABUdBR1TiqCtz3AYhIaoyINj9LDLPZTO6ml/n93cWfo788zuXT/ZS9+k1e
      z3dhEqHjw7/gsgSIZnKrt/C18tX4J0bo7Wim7tMhar95gJKH9hW8dLdKrPjDGgotMYTwac5f
      rqMzHKFiz2tzfvw3EdMq2V5yhWNXhll1q8dkxmaPE4lot0OzxGOEEckQZ0oviiKKkprW+bw8
      0rdktqXjyUnScGkIh8OJw/ZZL0DE4bYSD47Q2TNBQjeIB0fp6hwiBkAaJdl+6i934ld19GSI
      gf4BJqfnnq7wVFaTbDrJ1cEQmq6jRqfpaevBG4k/QpjSMJGoDbfbhmTE8PY0cb3XT1IHNRZi
      sLuN0bBIWl4ZK9YswxkaJ6gCKJgtEby+EKpmoKvqPbNBJhQlwOjIFAldISM7nWDfVVq9DrLd
      DxuIKxSs3kb64Blab02zualcaqH9fBPDIRVNjTDUcoMxi4Msm+2B3T1RVFC1AH5/FENXUfUn
      EMJ1gfNIC2GSyUZGmptoeASbOxObDA/2uRCxZZWypGKMupM/pf5jHWtGIbke++xNbZRt2cLQ
      4WP8698dR7ZkUOyRwDx3RBIlezUHtoQ5+v6/cCZhIFpc5C9aw46iwvvODVz/lH9sPMxtq+Is
      1h14jg2LCli24jxH/uXvOaRYyCqqxGmeMXcWBYO4r5dzx08wGYojml1UrN9FmRXARcWqYrpP
      f8L3zxtklWxm/2tr77DlT2f59koOH/oxf5cQsGcUUL39DVZM3ODkB5fY87WNZH3Wg7UXsX6N
      k396b4DSPQAy2St2sD50jPd+8HfEdQGbp5g1m9eQ5zIjJObuv1hd2RTnmzjzi60azjQAACAA
      SURBVH/grJTB6gOvsH6+DgfA9LVDHOz2sO/VdWQSpvXw+9xw1/LmhoUbS/jh1qBqnLAqYDEp
      SCJoyTiRmIrZasMkixi6SiwcQ7I7MImgxcOEdRMuqwIY6GqCSCRCImkgyCYsZgkEBatZBkMn
      EQ0RiiVBkDGbZAxRxmo2IQkGyXiUhGDGbp6RjK7FCQfDM4EeRBmz1YrVrCAIwu1aUY0RCEVJ
      3uVrIGN12rGaZLREmFAojo6AbLZhIoamOLEpoCXiRGIxVFUHUcHmdMwEkmBmh7dIOEI8qSOZ
      bNidltu1h2Ggzx5PaLPBJexWJC1GJCZgdVnvOldTY8Q0Bfsd8Xd1NUogGEexOWbLa6AlogRD
      MTRANlmxWS3IkgCGTjIewZAdmO+owgxDR01EiUTiaIaIxeHEKgskYlFEi/2WA74aC5KQZsp8
      J1osRCghYXdZkdGJh4LEJdvsu7yblD9AimeayREvjb889/ATn3JSAkjxWKT8AVKkWACkBJDi
      mSYlgBTPNCl/gBSPRdgX5Og//erLzsbn5gsXgJ6MMDkxzmQgimaImO0uPFlZuKzyZ9rvGJpK
      2D+BassjbT47gxsa0cAk4xOTRJI6gmTG5ckmO8Px0AAYWnCMUS2dgrSnz4TSUBNMjw/g05zk
      5WRhN9257YpGLOBjdHyKqGbgKVpMtv3+NPREBO+UH8XhId3+ZMpoYKQ8wh6GkQwx0HyVhvYh
      IqoxYzUmWShavI41K4v4LLcPPRGm5+pRQtW/dd8W5/ffSCcy2U/Dhcv0+5PMrH+KmNy5rNtW
      S8lD9odK9JzkUPg5fm+z57NP/I1jkAiN03D4p1wwlnNgz26WFd6OLmNEvVy/fIH2kSCiYqIm
      /UECCDMyPIAtz/nEBLBQ+EIFEJsaorl7mIwlu3h+cTYmkvgnxggkLE82EokWZ7S7md54Lrte
      3kiOXUaL+RkbGUX5Ku9vaRiEAyMETYtZ7jYz7fMSL7BjmS1TYmqYvoiZ1bufY3Gu/YHhjWRH
      FitXf+Za9DPLF9wCJEkIMk6XA5MkIGAiLbeItNnjwbajHA3W8Nq6/JkfJjv4uDnE2hVL8Chg
      qGH6Go7RfbAZb9xE6cYXeGlD0RxujTpqIolocuOwz+xiJlrTKCxPu3U8MtzMqboLtA8HES0e
      Fm/YxsYVZThnAmcRD45y+dOjXGkfJWYtYffLe1iSZQc1RH/zJc5camEilMCcUcrWfS+wPNcM
      eLl8fJC8tYvQ245wpF1j5Y7nWekJcPXMGS61DhLHRE7VWrZvXkOBS0bX+zj53ijZZSEa61uZ
      iJpZtONF9i3Pu8990jB0AoPtJEp2stnWxhX/FOFYERarjre/nk/+/RA3whrtzTewWU2se/l3
      yU92EhTyKNQ6+Ph0A/m7/5BtnnGutXXjKF1HVbYFQ08ycu0ER863MpWwULRmB/vWVWIhQMvZ
      Y1xsHiKoiqQVrmH/ixvIsy7coeIXWjJrVh5FlquceO9XTG/fwbrFeVhmt+wTBEgGRuifLLl9
      QSLI0Pg0SxMaKBALx4ha09n96jewJoepe+8/Oej8M16quacFkSxkFxZjXP2UX37gZ+fmleSn
      WVHkm9sgxhgfC5NZs4s1z7nR/YNcbGriht3JhupMdDVJX/05Kvdt48Dbu4g2H+FXdW0seX01
      yUiEkGZhxe7XyHWbiIw2cfrDo7i+8yIlShzfqBejoZmrg3ns2L2akkwLkdEuIumVHHhrJ1Yh
      ROeVRhob23BsWYqTIB1nP2XQuo/NL3wdV6Kd9989T8/il1lkvtvkwNCD9LZHKH05nzz8xOsm
      CISiZFhspOWtZM9LUYT2IEtXbaA43YzFotLVMk5PdxdtgoXqna9SUyih+yP4fOPoOTpgEOn4
      lJ/XRdnx8tsUKlH6JhKgaSQNHyGthN2vb8dlUhm7+im/PpPLH+8pX7Cxw75QAQgmD2v2fY28
      0iucPP5L/uZjiYo129myoYZ898NXEa1uD4urV1OSA5DJiy+N8c9HGwgtWo02PUkgkgRk0vPy
      SCtZxevfyqLh7Ane+5dT6BmV7KjdxdKyTKyyjeJlK3BPTxMKhzFkEw5ZIREIkSATUTZRtesF
      9q6bHQOsqMJ+aMaWyOTysKjazHQgSDQcQTMX4rGewBeAEg8Q6eD8yHr+6zvruDVWL1jMGqef
      6VCEiC5is1vwJqeIJsBpEnGX17Lv+Y2zkQQUljhHiM1ht6lONNDBKr7hEREpoCTRTJcvSHGm
      DVmx4nTZsdg0XO50MjLMkPRDaJz+kIeXXqqlNGumorjbdC5Mw+ke1r71J6yeDSiQNWvrZuhl
      rFw/xXQwSjhi4MjNJnplgiTl8/a4+KrxxbdtopW8xVv5xuLNRMa7qDtZx+lTcfbu3/zIOzRI
      OTl4/KOEYtMMN57las8U4GLz195kaZqEJb2ITQd+mw37g/Q3nuP4kfeJvPgNdhQY9DVd4WpH
      D9OhJDpJpkdVynaWo8Jn5MMgHhjlRv1FWganiSY1dC1JOBTEHmbGVt9Uzu5di29//GgEBpu5
      eKWVgckgmg7xwDgUrGdlEub/JakMNzQyxhJaLl4EYCo+yI2WUbZVZiM9aGrLmsvSZdUUZz1o
      nDXB2IiHpXNE04h6O6iru8yIPzZjcBj3MRlZTpDbbgkLjS92DDBrZiQIAiBiy65g/cYwZy+0
      4w1tZm7D5wejeicIprmxO3JY+9ybrL19IwxdB1FEAETZScnKnWyc/DGXB6fBOc3Vvijlm15i
      eUkGkhDg2uHzjD78jkyODzIaSGPbay9S5DKjx4Ocf/fvb9fXioL5zh2hCdLe1ItRsIa3DlTg
      UES8rac41/eILliJERo7FMrL4oyNjc385spB6OhkNLmMUvkBa5iSiCTInyFqN2kZIYIBHVx3
      pzHZfpaJjF28fqAYp1lC8J3ne/9xf9yDhcQXuhIc8Q7RcOEsneMBVN1Aj4cY7unCL2bhtoPF
      bCXmnyai6sSDY1y73sKIL3zrekPXUJNJNEMn6m3j+Ccd5GyownHvjdQ4Y63nqbvWhz+mYaAR
      meymrTdOdpYbkgkimoDZakbQ44x3tXCtpY/QQ0tgoCbjaLoyY6qd9NNdf4Ibn6mcJPGohmSy
      YhIh7O3hRuN1RgKP9uxig830etbx2ssv8/Ktv1fZVTBG00Di4Qk8EDc1qyzUf3Ke4fCMs83g
      0BjxeJJkLIauWDDLEJ8a4NL5a/gS6sOT/ArzhbYAJqsZOTrC0f88izcUB8VOQcVqtm5bR7YZ
      xMp1rLjyHn/154cwuXKozrdhts76HwoSejzKpff+mtOhGII5japNe9lfnXa/aiUJk01h4uRH
      /OOH08Q1AWtaLqu2H2BDmR2ECjbk9HLox3/Dr1UrhVWVODweHj4KUcjKLcZ5/RA/+p+n0O0Z
      LFq+loL0ls+4Jp0la3L5+NDP+IsPE7jyKynLyCLtkZ50lO5rg+TXrL57rUSwUb0ij6NN3SSr
      lj1Kgncgkb36edZHjvKrvzuBX7OQt2o3b+z0kLlkM6Z3f8RfnjSwZ5axqjodu/RFbSX2dPCF
      mkMbs10TTdeYuYuAKEmzUR1vB7TQdAMEAUkU0A0BSZrpyhi6hqbrM9cKApIkI80VtdEwMDDQ
      NQ191g1QEERESUIUhZmgD7o+EzjDEGZCsQo38zMTkV0zZgJNzKSno2ogzf4/k+5MYApRlBAM
      DUQFSTTQVB1BEu8KumEYOpqqzQTFEETE2TwLooSAjqYZSPJsgAsMNFVDkO4M3GGgq9ps0Ip7
      pkZ1DVUXkGURdH028Mbs/Q0D3dAxEO+6zjB0dP12Xmbei3YryIggSbNTsDP31W7mWxLQdZBv
      5fU2KYeYFM80U2M+Wg5eefiJTzkpAaR4LFIOMSlSLABSAkjxTLNwjTxSfLEYBmriUQMRP32k
      BJDisQhNBhfELNC8BeDva6Rt7J7VTHcRaypzkOeKa/sUYKhxJkd76R8NkETGmVtGdYH7njjB
      t85Gi4cYHx5g1BcmaUikZRdTVJSJ9SkoXjI4zlAQcjIzsZruz9CM5Wgz3UELxaXleOYTiT4e
      ZHBkEjk9m2y39ZnsD89bAEMXP+GSsZSSO1dmDM/Tu/WeoRMca+Xs8auE7Bk4pCjXGjvh9Tep
      ybhXAAZa1E/H1bNcH4qgWCxIgo5vMorZk0nJfUvP80UnMj3G0GCAzKpq0j+HRVl8tIUznRK7
      t6TPLQAtQuvxDzitlbFe8LC9Jv3hH7SeJBQKYbY/xe/xC2b+XSDBwYral9j+VfGrMDSCE/34
      pEW8eGATmVKE1g/+mUvdIWoyXPedOzV0nabOOItqd7OkIA2ToBGamnoE47U5M0HMP0pn8xBy
      2ecTwMPQIr30RKvYsCKD2Oggoer0e0197seaweJlGV9cpr4CPIExgMpEbxM3bgisOLCaDEDX
      fJz9+TEyX3yLxS4v9cd6yFxehdJ3lHfrp1mx9+tsrzAxfr2OD4/WMxyGvMWb2fvcJordCjDN
      2R8fJ1Ki0nahAz8eVux6gb0rizDLAkbCT9ulExw/14wvaaVmx2u8tLX07oAPgoQ1vYBsk4+E
      MRO0wlAlPBn3OxjrqspIdytU7GdZUcasF5mI05N98wzCw00c/uQUN0ZCpJWu4rl9e1icZQIG
      OfzTPoqWJ7h4/BKD0xIlm/ZxYOtS5I4P+JufXSQcSXK25SomMY3N3/oO2zNV2hov41q6golz
      hzg5kM1v/d5zOAN9nP30MA29PmLYKV67j7f3L2U+LtHhzgaClbUsy52gvnMcX0DDlSaBoeEf
      bubYh5/SMhFFdBSw+aXX2FmZDv5+jjf1k1u+kpoCJ2rMR9OJg5xuHCCQFMgo3cSrb2yj8DM3
      Qf5qM38BGBqhaR++O2oV0ewgzS6ixsP4pwRum00lCXp92DUAldDUFNH692kLlPLyNw9Q4JSZ
      vH6MD66GWfvGH/Atj07XxZOcPlbHjr07KHSoTI+1Eat+m3e++xLSdDuf/PwwZ7PeorZAouf6
      ZbojhbzxR/txCwEuvv9T3pff5o2N2betIAWBtNxS8jwDXKmrJ2Ab5krGXt4uvf9l6lqcyfFp
      8nYWzuFCaRAfbeb45XHK9/wWL+SYGG0+x/mjR1Fe3E+FK8F06wl67c+x9xt/So44yOFfN9FS
      mcf6pS/yx79TwKVLw1Q//yKldhAlmcT0OMGxDm74YjjcK/jOby3BI8F0JEr6igP8wes5WIwg
      Te//kPeaynl7xUMWnPRprl0Nsfy1AtItoHRM4BufpNidhREL0tFwHmndO/y3ZekY/iEahv1A
      OmgJAoEgrsSMc7uqTaM71vLNP/4aaaYkIxff5RfHe/hvB6pSDjGG4efCuz+m/Y5m3L38Bd7Z
      Ufrwi2ODtOjLeOfNdThkEbQJ2jriVK1dz5LCNEwCLF61iv66ZkZGpihYBCZLBdXry2acRqwr
      2bflOv/ePsn2NAu+iWGStmy8fV14AVtpEdGmFiY3Zt/ahdkwDELeYcbGx+nubqG3eifffL4S
      MRlgzJvEnZeJRbx5boR4zEGmda7XnGS0z4cgGySDI3QGAd2KogwzMOynwgVC5gZee2nT7L3z
      KfX0EJN0ECUUWUYSJWRF4fZ2/jr+6RDmpYup3bAIpwRg4M6roFQaY7S3C1U3MLsdjI5PAp8d
      dE31NdPMUr7pERBIJ9+k0ePzEinPxIaAJCvoET9en0x6WhFbVs5do5utJVRVjzA+0otX1TFM
      dhJjPhKwYMMpzVsAgpjBc7/z3TnGAPOYCzYVsXnTImw3Z4sSUYLIZJhN3LQ/E212XIoJPZ5A
      m6PjnZaWQXgoTDIpMjHUTT8y0VsDcpmcquy7YnDoaoj2S5fRK/fzzY1eLl4eoH8iSGS8jsbp
      Urbn3BaAKLpwpkUY90Yh897aNk4o6GWoY4Ip/9TtB+bIJdf1uD1IEXdOEaU1lbMf/0yY1dGO
      i1y4Pj5jOo6BPuUjkPswe3yVsRstjMbs1B87BkBouJsuQWbFkgocThsl1SsZbWzhWtCO1Sxh
      L1zO+urs+3wGIqM3OH2ulbA6a8gYHyM8aSNESgCf8y4yiiRyqx1VLNhRicWTaAZIAuixKCE1
      iVtR5pi90PH5JnG7liJJMo6sMlYsPsCORc4HNs265mVk0MLiF4vJUXLZFA9z4uzHtIkeNj1f
      Q/odJRdlmcycHDo7OwhUruDu71rGbLGRv2wDW7atJsN0n13kYzwQAVGUb1ufMrM1+0hnN+mr
      XmdLeRpmWSB5/Wf8ecdDkkqMc6NXYWmlB3E2eoyroARXyxQjwQi5rjQySlexv7CG0PQko0PN
      XDhxhZLq57l31//JrnqCuc/z0vo87CYx5RAzPwQkWUI3AoTDKsmwj9bTx7nu/4xL5HQqimU6
      rzXR7Y2gJ0P0Nt/AGzeRleNGBAxDJR5PousJJnvq+eS6yNqqDBS7nXSnQlf9Jfqn4uiGin+4
      k8bGHu6MTiwIDizmMbq7vMR1EYvJYHy4i6FxHcV8d7EFUSGvYhUu30VOXOogkNAx1DCDLU0M
      BM3k5qcz1XOdhq5xErpOMuylve0G/RMPC74rIEkK8cQkk1MRdC0542o4B4ZhEItH0JGQUfH3
      X+Xg2faHPv34aDcDjjK2b9tJbW3t7N9edlQm6RoKkIxFaL98lgE/2D05FOa6SYbjzLWllRqP
      E9MMFNEg5u2h7uRlJuJf/dXez+IRukDTfPTX/yeH7/x2Kvfxv39jM+nZZeQ63uM//uK/o9sy
      qd6wkkUZEcRZm3tJlrnbrF0he8VWdiSPc/AH/5P/jEJWxTp2P7eJErcy48gdauXX3/sfqEEV
      JaOULXv2sizXjiAaVK/ZQfTMcX75d3+OPy6QVrqM2j177mqmJSWD1bWrOXjwH/l/fqrhLl7F
      c2/9Ebb+U5z89Vn2fnPbbZdMQcCeW0XtHp0zxz/he596iQtmylfu5flyEXvJKvZvTfDp0R/y
      f/8kjOLIZunGXewoNgEisnKnvfysz4MgICDgyCqkqqiZT3/4P/hAz2Lnb/82m933PxPZYqVy
      2VI++uCv+e9hBU/5anZVl9AauNlPk1Ak8Z69f+IM9XrJLlyK03RHB1AwUbq4iE/PDZNcmYli
      THHkR3/F4HQCOa2InS+/OlP7CzOV182GKGflLty//Df+/LiKI6eKzStLyBo1L9gBMDy15tBe
      jvztccq++xYVX3ZWUszJQnGISdkCpXgsFLNC4cqyLzsbn5untAWI0HOpF/f6JTzb65RPLwvF
      IeYpFUCKp52FIoBn0QAwRYpbpFqAFI9FJBzGSHz1P53UIDjFYxGeCj1js0CGQWSqjz6vjYqq
      7M+9WWrC10vThMDS8kKspkfffCnq7aW5fRBr+Wpqch68N/6TJunvo7lDo3xdOc4nkaARY6yj
      lbahSVTRQnZxBZXFOVge9EjUIL0trfR5A+iihbT8MqpKcrHP4SPw2WiEvIMMT+rklJThXqi2
      Dg/hkZ5aeKyFSw2DPNoulwHazzbQ5QtxZ+x2BPHWNumPTpShllY6Gs5w+NoQ2m+yFyeIM5tp
      PSECPfUcOdtMSBcwIpNcrz/PjcHpOVdqSfpoPHKIs+0TJBERtAhDw6OEIo+47+gsgjC7Sdjn
      KsFXm99AFyjCcEsPSn4BpZ7brlWmjGJWP+4cZ9jHQESifONaIpd68e6qJHeuHeO+ABRXEctX
      P6nUNHx9HcTz1rNzxxIsxhQNJ87h6x8nVpLG3dGOdCaaz3BhKo19ezdRmGFHMpIEIwkslsdp
      jyXsnmIqF+q2z/PkiQhAi07TevEwx8634g1rmLIqeOmtt6mW+jl28Gcca/IidNZzSLGQU76T
      N39nB/b243w0mMGLW5bhMgK0Xr9AR8CK2nuV6wNTWAo28dY7+ym131vbGgQmJkiIUFy2mdXt
      P+TG6C5yC2fPG77Ez1pU8qducKp5AM1RwpadG0mbvMap+jaCYiYbDrzN3mWZSIZOYqqTj3/9
      IY39Icw51dTu3c2aikwUUaDxvR9gbHoF6cYRDl+HPW89T4XWxK/P2Hjl7bW4MNBi4zR+epCD
      V3oxbDms2fU8O9eUI4028P5Hh2kbDGFY06nZvIc9G5eQbr2zxhXJKy1Db4rObA+pqagmEza3
      837rS32ClsYoZRs2UOSxIwkCYMLlnPn4DT1O19l3+fhMO96whjVzEbWvHmBDsRsxNMqV1k6E
      rEVYOo9wsD7C7j/8XfJGr9A8Asu2bCR7Pl43C5AnIoBkUsfkWcTX/vgVcpwywf7T/OwXJ8n9
      7l5e/M7vYVPPoTy3jU2lWbdMcANqnEg8gW4Ahk54tJ8OXzEvvPi7vJxjp/fYP/Pp+QH+4LmS
      u2+mRxj3+hGlPLLS7RStzuP7V3rZUbhoxhxaSzDW3opj837+19dy8d44xruHD1O8/RV+/397
      i+TIBY4cusrYsr3kRXo4fKiF4ud/n5fyLEx1X+L41Ys4bTtZXOAgHhij88olHGIp3/zd1eQ6
      TUT74oQjyowPrTpN/cEPaLGt53/5P76DEvExEUigqxCeTrDswH/hjbx0jFAfJz5upLXfw/qq
      vDucbgQsJevZdOVf+XmdiXV2H34jh/VL8u5/MYEpRhQXy9Nsczr1G0aEpFLFm3/0OrlOkVDv
      KX5w+DJLfmcXLkMjHpqgu20US24N3/6zlWTZDIYGEsRjzN3dekZ4IgIwO5zk5GQw0PX/t3cn
      z1GcZxzHvz3TMz0zmhlto0gCAbIk0IIdBbGvFiJQtpNUJa5y4kMqxTE55a9I7KpUUrmlKodc
      shyygEOwi6VsV2JHhCVGYEBYG9pAQkizoGnNaHq6OwchCQmSEhIGkff5VOkyOnTXVP/ed973
      7fd9Pmcwl8dxcvhzYySmoXyJLYsRq6KlYS+NlTNDy7K6WkKdjx7NbU+ZTKTi+NY0E9FAq95M
      2dkOBrMbqX1wreimXexvWIOhewmGCqnevImm+hrCPjDD5ZSGe3EBc6CLez4/0YHrXBwCmMJK
      THI3nqR2bRjLymL7qtjf+vKC16dnWWM9dGn1HNndMLPRJ1pG1YPtxpGN9WR6++kY7sJ2c5iT
      93GyWfIu8wFwLRIDXzBoF0P3Wf5RsJ23vttM2ByhN+2jqrwEY7YOQN5iWtfxex4//tA8Rayv
      K2Xg1hWGsjYuU+hjGSZclyiQT6XIV+ygbV8jxQEPS9rHoYCVB8B1MMdv8Vn7VRLeAH6Phuua
      TFlpMhlY0obWpV8MMz1K35UbpEY0Ul0eIMd46iY3+tPUNjzZ8Q33U0mm7tvEDYfZ56xw7Voq
      y8J4AX+wmE3NTY99+AEsM40bDGPoi6Zs3Em6z7VzNWER9HkBi5SZJG/mcR3mpx7MES5dGyL8
      chvfiyX45O836OnuZSzZw21fDRVfKZn/KRSJEpvqYTyTo2bmMO0FHHOA9g8vYIZC+DQNSJFJ
      ZEg/OO9BL1lLw7r1FAVk7fNhTyEAeRITt0kaG2k7uJmooeM6o5zuf+8p3N4ijk16bIB0yddo
      aayc+zlVEszRd72PdMNXHy2e8T+ECsJ4yipoO9JCxHh03lHT9JljyP8LIxJFy0wxnbdZ8FVO
      3eHSsIfdR9pYHwvj1aboPHOa/kXftpW8y4Reyt7KYgoKY+xoMfn00w/pLW6idf86gg9f2x9j
      Q2mai71jbKkqXlSVBuyRa/QFNvP21+uJBnQ0+sl91j433pg5lv7RY85V9xSaAxfXmiabzmBp
      kDdHuHzqAy4nZv9vUFCQYHAwSd52sC1r2b85Hcdm9FYfa7YfZPvWrWyd+9tGzLzB8BNWYYm+
      VEdR3zlOddwh57jkM3G+uPw5fXeTLKUuijdWS717k1P/7CSdd7Amx7lzZ4T7ORsncZ80HjTb
      5M71i5zr6Ca+qLCLNxzFf2+Y7ttxLBec/DTJ0SFGkia2oy1s5bUQG/e0ELp+lhMXbmHmXexM
      nBs3e5hIZcC2mEylsb2QT4/w7zOfcDU+qex5P0v1RD2AR3O4e/U4P7s227qXcPiHP2JXdTMb
      ek/w63fPQNE6dh7cwc7xK8ysbxXxStsuRk+e5J2PTNY0HObbb+8k5AsSDhozm0I0D34jRNA3
      n0ePHiQcWnh7Tn6Y0bFaml4PLWjJjIJK1ldfZ3Q0RUMkQCTom9ts4vEZhEIhfHP7f30ECoLo
      gCfcwJs/0Dl17E+8+34KQqXUbz9A26YCvIARjj7SRGh6kGjEmPlYL2Tbt94i/NEJfvmT41Cw
      hq2tRziwpZ5vHrrN737zc47lQ1Q3b6GmsRE34lvwUHsK6zjcmuLk337LT/+co6xuG4eO/hjf
      rXOcu9RJ2auvEJlbEdPwFzfx5tEoH793jF+cjuP4o2xoaeUbVRvQ6w5xsPP3/OqdU3iiVWxr
      baR5/T0MNPDoGEYQz6LCero/QDAEsx/HL/2FP94s5zvf30c5k1w5/gcul77B0QPrnuApebHI
      u0BiWWRDjFCaP+CnZk/j876NFZMeQCzL/8t+AOkBxLK4rks2m33et7FiEgCxLJqmYRgv/iuk
      EgCxbNqzegf9SyTLgkJpEgChNAmAWBa//0us9vEMyTSoUJr0AEJpEgChNAmAUJoEQChNFsLE
      yjlTDF78mA/OdzFtxGjee5jdTRUYL0DzKrNAYmVci+HzJ/lrT4DXDu0gZPbT/q9rlLa8wb7G
      MvRVvlgsPYBYETc9SMeQwZ79u6iuKMZLhJ2Taa4OdTP+UoyKx1beXD1egE5KrGa5ZJxsNEJJ
      JDRTaknzUxyLgCdD2lzKxtLnSwIgViRvWQQDBj59vkZZwAjg0XVse/WfOCQBECvmOA48tP3e
      dV1c58UYWkoAxIr4/QbZ6RyWNX/QVjabxXVsdH31DzElAGJF9Fg5JekkA6MT5BwXx5rk9vA9
      8BRRFH3yY++ftdUfUbGqaYFKmpsKeP/yebyZGozpcfqGTWp27qbYt7pngEDWAcTT4Ewz1tXB
      hc5hLF8hNZtbaKwuwb/6n38JgFCbjAGE0iQAQmkSAKE0CYBQmgRAKE0CPHXOVwAAAGFJREFU
      IJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJ
      gFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKO0/XFS7B9nEm4QAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Effectiveness on Managing Covid-19 in the Education Sector' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Effects of School Closure on Controlling Covid Confirmed Cases ' width='192'>
      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
      tbINskS4pw3ftJGjIbyyjpKI1T5HQgcZnl9Ljruzh1eoorWlcffKhHrbkUMqvu1ir+2gNqdw
      909mCWsomvqaU5YQAl83kTQNe30XtSmBmknWZoGtPMIXaG1NuLYNZQPhC0LdLUhSzS5wcyVC
      Pa34poWSjCPJEsL1aiffmWTN96liEEoncIsVwn3tb9y1ef5MJFlCCofwLRspGkZUjNfK+o6L
      vbqL2ppCTdWWIU6+hFfSUZJRnN0ial8boXj0EDk+1tI2UkitOfNR29b1XQ8l+sJT4KidHHuz
      pjyRoa5XMnD7loO1tkuoM4MIa413EnwZkuO+S7KDeIBzplHiAQICoMG9QQMCvm+CF2UHXGqC
      3hhwqQlsgIBLzbmfN9eTF+i0G08ve2qelrNuegWy3y3Z56oAkiQdO8LLsnzqWeD5K1bPUv4s
      M9BZygeyG1P2uSpAPQbu85O90/Bcm08bVHMW2Wct/7bKftef+bkehAUEvG1ciBFsVYuMjz0h
      X6m9+XtzdZGnz+bqW9sJwcriLNNzS7UpzXN49GS8btm2XmJsbIxcuebVuLG6yPj4JHadkWV7
      u5uMT0xiuT7C95ibmeLZ7AL1Vd1nZmqC5fWt/c+C+ckJKnVGfRWyW4xPPMV0PHzP48nDx2zs
      5Osq65oVxp6MkS1WAcjvbjI5PYtbT7uFYH15nqmZBXwhMCsFpqammJyer0s2QjD77CmLq5sA
      lPLbjE9MHNTlOEr5HcbHn6LbLiCYn55kZn6Z+kZqwfLMJLlyra+ZlT3GxsYpVA6PQbkQBVjb
      2GH09h2ym6uAT8Xw6IhAwa7jx/AtTBEmorjYrgAhkOtINPWc1fVtRm/fJre1BkBnTz9R2cP2
      6nucu4UKo0NtrO0UkWSFdCqJZZjUoz5+dQcl3Y+l1wJy9MIuhaKBVafy7eyVGb3Syfp2AV+A
      foIIxJXVTUbv3Ca/swEI5ufmEa5Lfc32qTqQiUHZ8IgkmrjS2040kTq+KICZRcS7ccxaoE65
      XEaRoVynAmznioxe62VjKwfCwHKjCL2AWVf7BYlYFMOqBU1tbmW5eWuE3c2NQ6++EAVQJYFh
      GvjiuVOZg+G4qMcFEQAg49o2juMiSSCrIUJK/dVWJYFhGHj7spfnZ2jpv0o8VJ8S+a6LYVj7
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Income Group' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAGC0lEQVR4nO3YzW/bhh3G8YcUI0uyJNuyYytVldRJkwZp0+6ynYYd+x/utsv+hZ1boIcN
      AYZgPThp3SaNYzu23mz5Ta+0JO6QLXAKoQOKRULzfD8nkqDIHwl9QYlBkiSJAFPhvAcA5okA
      YC26uvJoa0ePv9+b1yzAzL0VwD+fvtRf/vZoXrMAM8dPIFibGsBCJqNsFGilkFUxn1V0Za/i
      YubN8kox984HBN6laNrG0vVVpS9aqlTL2qmdKEmkh3duqNE40oP7t1U7rOvxs7pymbQW84u6
      uZrX9otD3btT0d5BSx9Vrmt3v6Zy5YayYaJkMtaT3bY+3VzT1vaeLuLJrK8TmGr6T6Aw1O/u
      39KdjaLK15f1YPO6nmzvaX1tSbXmscbh626q5RWV8hl9t3usLx7eVXPnpQqlkp4939VmdUPJ
      ZawgkJrxRH/65EMpvKYbK9lZXh/wi6Y+Afqdjv6xVVOptKJ4IsWjsX7/8LY06uunZkeJAknS
      0WlHw3isYRzr+YsD3f54U7v1Ez24v6laraWhQnX7kc7jsZ6cDVUt59XuxDO9QOCXTA3g9PhE
      knTUbUmScvlF9eJLPXtR11H38s1+z/dab5b3BwPtN19/7mWtPfVkO43W1O3AvEwN4Od6na4e
      be2861mAmeM1KKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKxFV1eWCzndKpfmNQswc28FECznFVTX5zULMHNvBXAxiNU4781rFmDm
      +A8Aa1MDWFsuajkd6O768q86aC6zoPR/jnxztSBJurVaUHVtSQtXzpiKIhXSqV91DuD/IZq2
      MZfN6HLYUWkxq89vZbWciXR40tO9jaza5wNNrmW0ngn0qjNSNBrq8cGZvvysqlyUUjeOtX86
      UKfb1731osZJosrqkiqLkbaP+wqDQJ+sL2uv0dKrOFI5PdYfy6vq9gc6H4cKLge6ll3UUlo6
      PL/UB8WsUhqpcdbX0lJe0Wior36sz/o+4T019QkQjyYqZNJKR6E0Gelp/UzFbFo79WOlomu6
      Wcqr0RlI45H+9aotBYFq7VPVz7vaOekrl05pYymnH/aaGiQpJfFAB+cDSdKNUlHxoK/eaKIw
      DJVOhXp11NZJPFEuCvR940ILwUi1wViLwURbB23ttU40Si2oUkzrqBvP9Abh/Tb1CVBvHWup
      sqYfDpuqltd1Mz/Sd62uvvx4Vd9sH2q7daGNbKj9s74mkjQZ6+VRR6lUX/F4omYYajCMdfeD
      Nf1UayqdyaoQDnVwMdTwcqz7lVWd9obqTUba7SUKlEjhUEmY0kelrJ40OlpLSzsXQ43GiTr9
      RMFFrHa3p4XkcrZ3CO+1IEmS5L8rf/76W/3170/f2iEVBhpPEkmBUkGicfLzQwC/Xf/zLdDr
      L78k8eXH+4fXoLBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBGALBG
      ALBGALBGALBGALBGALBGALBGALBGALAWXV2plgr6w2Z5XrMAM/dvyEd+0tqzyFkAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Learning Platforms' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAATKUlEQVR4nO2d2W8cV3bGv1p77+a+UyJFUQsl0aJsjz1xEltJnAHynP8gT/nT8hZggiBB
      MhMM4AQzccaSZe2UxEUiJW4S2XvXdvNAhVYMdrV5u6rrVNf5AYZFt4o+RfbXt+4953xHEUII
      MEwCURRFUaMOgmGiJHQBCCHAiwxDFRYAk2j4EYhJNCwAJtGwAJhEwwJgEg0LgEk0LAAm0bAA
      mETDAmASjS574eHeFh5tHuCXHy/jzeYzbO0dYeHqMnZf3MdhQ+DGygoyuhJkrAwxjsplNG0r
      6jA6UsjmkM1kTn1NWgBGdgBpbReAjWfPXyI/NAJTb6LpFrB8OYeNl/u4NDdykgX2PE/2f8UQ
      5Zvnq/jt2vOow+jI3338Ga7Mzp76mrQAcrnc+z+50Mwirl85j/tPVqEpg1A0DYrnnZRBCCGg
      KLwa9Bt5XcdMLh91GB3RVaXtB7CkAATWVx9ha2sLAyNTGCopuHvvEcbPXcHhq0e4cw9YWvkU
      qvrjFuPDPzP9geV5OLJaUYfREQFA109/q0sKQMHc4hLmFpeOv5wZP3lldvxzuW/JxA5D1ZA3
      zKjD6Ijq8/TBH8tMomEBMImGBcAkGulTIIYREHBFvI+3WQCMNFXbxqtaNeowOmK57UXKAmCk
      KZkmLhRKUYfRkZTW/kmfBcBI4woBy3OjDqMjfh3pLABGGgUKtJg767AAGGlKpomFYgwegVSt
      7WssAEaaputiv9mIOoyOOD62PCwARhoVgB6DGi+/MkwWACNN2bawXilHHUZH/DbqLABGmpSm
      YcBMRR1GRzSfYjgWACNNXBJhtk8zFguAkSarG5jM5jr/xYjx26fQ38EwTIiwAJhEIy0AIQQc
      xzn52rZtCCHgOjZalh1IcAwTNtICeL35DL/55vcAAKdZxq//8Z9QdVzc+fYPuH/nW+xW6Ntl
      MIz0Jnjq/CJ23lUB4WH12QYuLV4AUEE6fx6XLmaxvnWA4ewYvPfuEOwK0X/EZfCJ53mw7dOf
      Sro+BfLsOsrVGg7evIE6UIJt19CsOFBTg9A07eSNz64Q/UfLc3EQg1IIAQWGYZz6Wle2KPVa
      HRu7NXz2+ec42NlBfmQUB8pzrO1ZuHZ1oIuQmTigKkosSiH8aiG6tEX58b8Mjx9bo0ydX8SU
      3DdlYoapaijFPBMcA/kyTHiwAJhEwwJgEg3XAjFdEo+j0HawABhpFBz3BccZFgAjTcW2sFmr
      RB1GR7gcmgmFomliLl+MOoyOmD65ChYAI43teag69AsfPW6KZ8JAU1RkNPpvIb86ND4GZRIN
      C4BJNCwAJtHQf4BjyOIKDy03Bua4Prk6FgAjjaGqyLaZvkgJNfhyaIYBjiwLLypHUYfRkRYn
      wpgwKBgmzsc8EcabYCbRdGWLYlnHzg+ubaFarcETAo7dQr1Bf3o4wwBdPAK93nyG+2u7+Ouv
      vsDG2iosuwWRnkJt9zk0XcPU5VsYL9KfIs4km+5tUQDMXVjE00f3MTQEuPVzJ7YoIzm2Reln
      2BYFACDw+OEDTF1YwkBewdaLVTTKFtT0MNui9DmW5+HQakYdRkeEEpItSqPRwNqrbTiWgxdP
      H2J6bhFToxlsHnhYYlsUuK57sk+ijKZpMM2zP65mdA3DqUwIEQWLHvx8gJ/YosxM//jSUAET
      ct+072g2m/iH//49HJ9zaAqszMzi08tXznydrqjI6ad/slJC5QEZ0VG1LVjEBWBLzvq1PA9l
      m/4K5/rsVfjBnEk0vAKEzPlCEa5H+7SkYCT3uJoFEDIqFAiFtgCSfEDNAgiZtcoR+T3A2OBg
      1CFEBgsgZNKaDk2hXTOvKcndCrIAQsb2XPIrgJ9rgh8Nx8ZOox5wNMHjdwzNAgiZuULR9xiO
      ArKb4MlsHn82Qd8MP98mCwywAELnzsEe+bbBUlGupn+3Wce3ezsBRxM8l2dm277GAgiZ5aER
      8ivAUCotdV1cBmRwJjhC1itl8nuA8QSfAiV3+88w4BUgdBwhyBfDyT6hiRjcWydYACGTUlXy
      mVa/Z2Q/NFVBStMCjiZ4/O6OBcBIExtbFJfzAEwIlEwTFwqlqMPoSErj+QCR0XRdWJL19r1C
      9pjW8QSarhNwNMHjV4wrLQAhBFotC+l06tgKpeWgkMvCsZpoOkAhR79VrhcslgbI5wFKEu2Q
      wPHewVBjsAcIwxrx9eYzPFjfxddf/hL3796FYajIT1/B3vMfYJoaxhZuYqJEP0nCJJsAbFEa
      0NNjuHZ9DA8ePEM6N3tiizKaH0+0LYrruji0WnCIN8S0HKetbYgfbIsCADBhW2XUDzUgMwzr
      8B1qhy1omdHE26JYlgUhAEF9lq6PbYj/ZfH4UFNVNRxblFazhbVXb3F+ZhirW1UsXb2Md69t
      bB25uHqZ/ulAL3jdqMEiXgy36MhtZB3PQz2ZQ/J+YosCYGj8+N9jM/MYk/umfUlBN2AR3yga
      kquzqamx6CfWuBguOnRVpf4AJJ0Jrtg2Nqv0B2X7FSOyAEKm5dLvCHOFXHw53cB0Lh9wNMHj
      t8KxAEKmnzvC+oHkHc0wzAfwChAy3BBDG14BmETDK0DIHLSa5JviZeNrug72m42AowketkWJ
      kF+MjpPfBI+ms1LXZXUd4xm5a3sJnwJFyEGzCVvymLFXTEuWNDecmKwAwWeCmZ/LodUivwlu
      SfYrpDQdg5KWKr3ELxPMm2Am0bAAmETDAmASDQuASTS8CQ6ZWFSDkncuCg8WQMgIIaT993uF
      bHQ1x8Z2vRpoLGFgcyKMCYOCYWA2V4g6jI6Y4SbCBN68XMObt3VcXrqK8s4G9ioerl65CC25
      K+sJQ+kMXOJ5gLSkvaHlxn9OcAACcPDy9TtcWxjG6vo2nHINF6YzWN8+wsI09wXvNerkE2EX
      JDPBusqT4gGhQoOFH56+wtTCHI6aA8iWstjdqsF184m3RYkDwhNsiyKNsNCyFYyMFFE+EmjW
      XuLxQw1jF2+yLYpF//EAABSVbVFOZWfjCf75m+9xe+UaBi8toaSfcsNqBh9/8hEaLReFQg7u
      uVG0HIF8jl3hgOM6G+rl0LLVqq7wYuEN6nd7vgLY3NzE0GAeW8/vwZtZQqnNLDUzlcH/jYpS
      U2kY/N4/Iavp0InP4ZWNbziVwfLQSMDRBE9Gb7/J9xXAzU9+gbe//R2csSXM0z/tIslGrYKm
      Q3sFuC55kvOqVsG/b70MOJrguTg90/Y1/xVg9SG2dvbx9uETXL2+jLFc4LH1PbO5Amzi9uh5
      SVeIgmFirkD/k1E6DzA4PotbtzLYW72Hqgd2fJNgNleQ9t3pFX6DpP0QEOSNfwH/THeHUyAB
      z/Mwfv0LzNP3PyKJqgCib2ttFGlXOSq0FcDze/+Ff/3m7snXE+f+nh+BmL6jrQAWlv8Ef+UB
      v/vuEbJmCgZtf1eysC8QbXzPv6otF/PTEyiaQJm+CzbDnJm2K8DRwQ4m55ewlDextXuIc7wH
      YPqQtgJw7Qb++IfvcFS3MTwyhsnpGWTp1z2RYyyTJT9NPaMltyq+7Z2Xhidw8cI8Hq++wNb6
      U9Tsr1gAEhw0G+T3AE3JUo2+LoV4vf4UB00Vf/mrv0E+m45N4RPTO4zYlEO3f62tAGYWl9E+
      gcz8XPq5FKJsWVirlAOOJnh4QkyE/On4FHlv0ImsXIInb5g4l6dfCsHeoBHCeQDa0K7TZZiQ
      YQEwiYYfgRhpTFVF0aQ/YC/0OcEvnz/C7mEdC1eXsfX0DqpN4NqtT5A3eYE5tFrkWyItV26P
      4ggPNYlm+l4TwqT4D7Hw/MUWSsPDgKjCU0dw83oOG6/2cHFuFN77DWA7B4G4NI4bhnHmXIjn
      eRhOpclvglOqKuVgQfxw6wQhRNv7C8QYK1MYxvLyJdx/+AQqShBCQLzfXiiK0tYWxXVd/PqP
      3+LQanUfRoikVA1/++lnyGQyZ7pOURTsNhvkV4CG60olOuuOjZ1GPYSIgsXx2tvyBCCAFMaG
      DNy58wDTC9dw9Ooxvn/0DjdWbkFVVXieB0VRTrVFEUKgZJq+57QU0BUVqqqe2dpFUZRYrABp
      XZOyrcnoBkbSZ/tQiAJda/+7C2QPMH/pOubf/3ly6OMgviXD9ITIT4E84b9JoYBQaMcXFUXT
      xHyhjVcOIVKqpC1KL9ht1HHQoj1pMN1FufBcoUi+FKIg6QpRsSxsVOnXAn3k48oRuQAURYFG
      3Diqm8bvV7Wqrz89BSYHh6SuEzhewanThStE+ExmshggnkzpxtltIpP1nVNLgawe+dsgMiK/
      8+16DW9bzajD8KWbR6DvDvbIN40Ml+Rs7OuOjTeNWsDRBI9fR17kApjK5jCYom0m2s0KMJnJ
      kj8GzUo2teQNA9NZ+s3ipMuhn5YPySdTsrqO25LXHlqW9CT2XmFJxtd0XbwjnsQEQp8Q0x0X
      iyVMSTZk9IpuVoCCYSDl0TZVkk1EmqqGouQJUi8Jd0JMlzQcF1XiBVV+5qpMvIlcADld921a
      pgB1f39GnsgF0O+nQLbwyNujy57le0KQvzegiwkxvaDfT4HSqkZ+Ertfw4gfuqp09eHQK6Rs
      UXpFv68A69WytPFUr7gmaYtyZFl4UTkKOJrgafk0/EQugH7nq8kZ8rVAU5Jn+SXTxIUC/VnQ
      KY1wHsD2PPINI93UAj05eifdctgrhksDUte5niD/uwOI1wLN5vMYTqejDsOXbvYAF4sD5FcA
      2cZ2RVGgx/yIOHIB9DtsjEWbyAWwXa/hoEl7E5zR5DO5JTMFh/iQPNOnYaTfCUQAwm3h3/7l
      P/DFr77G2r3/QdUCrq18gkKq8w+2ZKSIHxJ29wYZSafJPwLF4SgzLAK58/XVVQyNjsETVQh9
      DCuXctjY2keugy2K67qo2BbetWgXVKU1Ha7rntk6xPO8WDwCjZQGpGxRbNdFzaFdxgIArueF
      Z4viWRWsb++hXj5Cduy9JYpwIaBDUZQTO4rTbClUVY1NIkxV1TNbhyiKEouWyKJpStmimFo8
      iuE0pf3vrmsBqGYBt//iNrbW1zA0cx6blbu49+gIN27d+n8CaGeL8v3bfWzXq92GESo53cBt
      5aaULcp/7rwm3xCTzedxXeI0p+rYeFmrhBBRsNjCC9cWBQCm546NUS7fuHWm624MDWOhSDuZ
      0m1LJPVHINmWyJxuSCfReolfuXe8D3EZpktYAEyiifz8a7/ZwFvyp0DJPSf3Q1MUpGLws/Gr
      xo1cAGPprLQxU6/ghpjTyeh6PLxBKTfF93s59H6riRbxUyDZcu29ZgN3D3YDjiZ4bp6fa/ta
      5AKISx5Als9Gx8nnAcbSWanrcrqOiQxtQwOAuC3KkW2hTHxIhulTT96J7/Z30STeNliUNLht
      OC72ifu6AvB15otcAAXDkG7J6xXdrAAlM4UM8TyArMDHMhl8MjIecDTBk/V5hI1cAP1OHEoh
      ZA8hjiwLz8v0WyKvU3aHdjxBPlMqujgEikMxnGw/QMEwMBuDSfF+1byRC8BU1a7q7XsBH4Oe
      Tt1xsFOnb47rZ08fuQD6/Ri0n3EF/dUbAIRPV3Dkv9nxTAwSYV30veqqCs+3LTt6qPsWhUnk
      Avjh3T62a7SX0Zxh4GvJa4/7IwINJ3Bkw6s5NrZqtEvZAeKPQGPpLPlnbJ4RdjrT2TxuT80E
      HE3wFIz28w8iF0DDdVCRdCbrFd00tf/w7gAWce+cAcl+jP1mA3cP9gKOJnguz8y2fS1yAcwX
      ihjPyKXie0U3K9TSwBD5FUC2FEVXVenpMr2E9HyAfqef8wD9QCACePboexxW6hiZvYrK9mPU
      LGBp5VMU053P9xuOwwMymMgIRAALV27gzcZjNL0qFGMCK1ey2NjaR37+2BZFCHFij/Ihnufh
      yLJikQdwXReOc7ayZs/z0HRd8jPCHNc7870BgOO5aBAv9QaObVHa3V8wvkBPH0AtTmJuIosf
      9rchXBdC/dEW5UN3iJ8Sl3JoVVWlXCFyug7Do72CGJp25nsDgJF0Fh8NjYQQUbBkdSNMVwgb
      OztvYdZspFOLyOhV3HtSxvLKys+yRblzsIct4rYo+S5sUTZrFfLzAa7btpQAXtUq+M32yxAi
      CpaL0zNhCsDA53/+5clX40M3z3T1WCZDvhw63cUk9S/Gp+ES9wadyMqdwhUME+dycSiGI9wQ
      M5HJoWgQfwTqYhO8VjmSnsPbK2RPgQRAvswDID4fQFGO/6FMN+EpAJQ+rrWJ+71FLoB+t0fv
      Z0qmSd7VDwBSlPsBmPjScBzsNuLQE0y4GC6vG/BStJ8jkzxAwo+sbmBScgPdS0i7QtQdh7wr
      RDfVoGXbIj9ITnaIX9luxaIneMnn5x+5AOKSCJNl0EyRrwWKg71hWEQugINWE4cWbW/Qbt4g
      bxp18omwhkQZBHA8eCLTRY6kV5CuBm249Ivh3C4+wT+NgTPcaEbO39P2PPK/OwC+P//IBdDv
      cDk0bSIXwFQ2hwGzf/cADG0iFwAnwpgoiVwA/Y6paVITGHuJluAVLnIBvG028Zq4u1jex1Wg
      E67nwSG+B/AkN+l1xyb/uwPg+/OPXAAj6YzvMRUF2BnudKayeXw5OR11GB3x+wD7X2nDS0ju
      SWq+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='List of countries and regions' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAX80lEQVR4nO3dWZMcV3bY8X9utS9d1V3VO7rRWEmOxpQ9a9BWhCSHFGG/+NERXr+XH2w/
      6MUvdoQljWXHyNKMOSIJLiAAYm/0XtW171W5px8waBtosFsDoLKYzfN7wsbKU+y6lXnuPfdc
      JQiCACG+p9RZByDELMkAEG9lOBzOOoS3IgNAvBXf92cdwluRASC+12QAiO81GQDie01/8Yvh
      cBj55zkRvtFoNOsQ3srJAMhkMgBUDnZxAoP1S6vffnsIfGqNJovl8snve4Mh+Vzu2/4DhoMR
      6WwG27KIGTqOGzAadNATGbLp5Lt7RyJ0uW/9uX/3nfqM/+rXH5NOp+jUDvns89uMBl0+//xL
      dh7e4j/85/+G5fsMm/v8p//4Z/Rsnwd3vuSw1uDrr7/haPcJt+89wn9lac2zRnz66ee4fsCz
      nWc4do+dB9/w7HiAbVlhvVchTtFf/YNhr83+0TGJYMTenU+YuD7dVpO1pXXWNjaJqypff/0V
      K+UMt+4+YvD0CddTOTqtNseGy92799m8doO5+P97zeO9bRJJlSf7bRQAAvTsIgW3Q7XeYr44
      F9obFuL/d+oOUCgUCDyfTq9HsbxIobhAPu7RsRI43WMs38dJlvjX/+7fow8qrG9uUDuuUSjM
      0ev1KS0tob3ymk4sz0cf/QEpBsQUn4cP9ykUEkwcH01TQnqrQpymTLMWKAgCpNToYhsMBmSz
      2VmH8cZOPQK9S67r4jjONC8hZsyyLAzDmHUYb+zUALj75aeYaoYff/gBuw/usNfscunK+1xe
      WXjp3319+zYrCzmqfQvfU/jw925+60X2d54ysV3i6Tm69X00PcHl9TKPaxabcxArbpCJvfs3
      J8R5Tg2Ax4+foOfK8OEHHG3vc/0Pf84n//MzepeKdE2FjGqi55cZjUb8+s4t1n70EdrE4uO/
      /SXza1e5eWXj1EVs28b3fDw/wPN8UkkNx7FRfY92b0JJcmAxIy8nwd4Q2/Y5fPqYSmcMONy9
      s80/+ccfsr17xNNn2xzV2vzg+haNRpP58jJXt9Zo1qo0hz7XNtdefxHdoFQqY0/GJJIJLMdH
      CzzKq6vUq0chvE0hXu+VJNjn7pdfoCUyrG5sMWkek19fJx64fPXV1yRyRYoJaJsqKUMhrisU
      V5ZpVJp4Zg83lufqxsrJqzmOg+M4WJMxg9GE/FyBwHfRNRXHddGMOK41wUikkMmgaBoOhyeL
      qFE09VkgKa+42GQW6AyKoqBpGo45Yntnn8WlRTBSaNYYLa7SnQTkdJ94fp6YlOVFkqqqaNqr
      Kz/RMdUB8MKzZ7tcufEe/uCYB0d9jH6bhbUiB40JS3FYyMoAELMRysfOD57fDRRFwbFtHMcF
      YG2lzGG1HkYIQrxWKHeAK1uXePTgActLZa5sXkIzi2gJHSWRw11blm9/MTNTTYI9z5Mk+IKT
      JPgMvu8/nwq1LSamRSqTBc9FVRUCRUNTZe4z6qJe7hLKw8f29lNGoxG+H7Dz8BGd1gG1gRvG
      pYU4UygDIPBd+v0+AQoo8q0vvjtCSYIT6TyXNzdp16tMFI24ZuBJ4iu+A6aaBL8ohRAX12g0
      Ip1OzzqMNzbVO4BhGJGuFRfnc12XVCo16zDeWCgPIjtPH/LgwQMqR4fcu/cNjXaXz259QRAE
      3P7s/zC0w4hCiNNCGQCj8fi3vwpwfUgmYsR8i+NWi4nl4spSgZiRUJJgLZbivZs3GfV7pJJx
      dnYOyC2usHP/G5aWFs5/ASGmZKpJ8AuTyYRkMoljTTiut1haXsb3PBzHJm5oKEYSXWaFIqnf
      70e6MdZUB4DruriuLHhdZFHfEDPVR6AXG2JGvR5GQuPpsyMWV1aJBxZ+LAOOSTafR5bGosv3
      /UjXe4WSA3SO62RKMVKlS7Qru8TiCcZ+F8P3SefzpxppCRGWcJ+8FYV4TMdHZT4bo9k3Q728
      EK8K5Q6QKcwRj2t0d3YoLZTIx1QyhQKdzkgef8RMTX0/gCTBF5skwWfQNO1kw7Tv+xAEeEGA
      rmkEQYDy28pQRSpEI8uyLOLx+Pn/8DsqlEcggDt376L5DkY8jppMcLjT4f2rJWLFFYqZ6P4P
      FNEWWhKsKAoEAa4XkEjEWFnIUmn2w7q8EK8Vyh3gaG8b1UiSTKbYunYVz+7SCObob38ljz9i
      pqbeGU5cbLIp/gxR3zAtzmeaJroeWir5zoWSA9QbDexRl1q1QqU1oFer0O81+Wb7CN8x+err
      b8IIQ4hTQhkA/XaDu4/3KeUTPH78iEePn2CZzztGt1tNnOiWkoiIC+XepSfSlPUJ/YnD8tom
      BbcNQDGXZKfWZy4lx8OI2QhlACyWyyQSCYb9LmulNEaQBFUjN29gFnIYupTDidmY6ixQ1Etl
      xflkFugMqqqiqiqj0YhUKk5/MELFoN89ZuIZbG2uoco6QKRpmiazQOep1evsPn6EGlc5OmrQ
      H9ssxi0Ou9IOQsxWKAPAMYc0+iZJ4/mzfr/T4IsnNVbykvyK2QplU3y90aCYTVLrDVE9g0Cx
      ycRULC1NaS66pbRCNsWfSZLgi0+S4DN4nielEBec4zjYdnRzuVDS9739fXJxlbGvUa/VUQOf
      a5eX+fThMfPZBD/84GYYYQhxSigDwJkMedp0uL5SQNu8xpzSo9Yc4rkuRkw2w4jZCacUIpnm
      WkGna/m0q084DjyuXV5hqKYJJn1cP0CX45LEDMj5AOKtyKb4s15c1yO9SijO5zgOyWRy1mG8
      sal+Ol9sd6weH7O8tASBz9179/nBDz7gcHeb7tBk6/pN0nEZJFH14gD0qAplJbjb7QIw7tQI
      goBmb8jQDvjgvcvs7x6FEYIQrxXqV+9BpQZAtVIl8BzM8QgtJuUQYnZCGQBLC3M8ePCYxUuX
      KeZy9PsD8CyOGiOuXN4IIwQhXmvqrRE9z5vWy4vvACmFOIPv+7iuy7DfQU/m0HyLkRUQ0xVS
      CYOx9bxdYiqVmGYYYoqi3v81lEegeqOGakzQgiH9sUZMd7m2UeKwNkaxAq7dWA8jDCFOCWUA
      qHoS3zUJFIWYptBt1XlkD/FT5XCzcCFeEcrnL5VMomHhqAV8yyKd2WKlnOeoZdJsHVBrZlhc
      KIQRihAvkUPyxFuRUoizXlxKIS4827ZJJKI7iRHKp/PJg69JzK0R8zpUuzBs7vPTP/hDvvz4
      b1i7epX93RqZfI4fvH9djkwSoQrnpPhEBmvUxcYloekkF3JUKhU8Yvieh+f5JyfJCBGmkA7I
      UDEUm0BPARBLzVF59oSVtWVAYWmpjOd50k5dhC6UrhC+76MQEKBCEIDCS2eEgUIQ+KiqGunK
      wu+jqHeFmOojkOM4Mgt0wVmWxWQymXUYb2zqOUAQBNQq+8Rzi+jegPbQx570uXJlk1azj2cP
      6Q4nrG9eJRWXPCBqgiCI9KNrKEnw2HIYN2uogcnE1sHqcthoY7ZaeHqK+bkcWrhn1gsBhJQE
      K6pO4Dv4ioamQDK/gN1v4qPguQ7xYEKla4YRihAvCeUOMF8souPgqCkCx0bVFGJqgZ6lYPhj
      ap0h65vR3Vcqomvq+wGkNeLFJvsBzqBpGpqmMR4N0ONpVN9mbLnEYjEMJcBDodlsslBeJCan
      xESSrusYhjHrMN5YKI9Ah4e76Il5DL9PawAxPSBuaLi2Sa68jG27MgDETISSBOuxNL4zxvYh
      YeisFBPYep7LW1u0j4/oDMZhhCHEKaHcARKJBHpgYWtzGKZJOpcirxkM+j1QNDRpiyhmZKpJ
      cNQXScT5pBTiDK7rSm/QC862bUwzums4oTwC7T59QHxuBWvUwTHHeB7kyytYoy6LxSx9O8bi
      fHSn0kR0hbNdy0gy6jbwfB/XcUilMvieh23b+J6L68quMTEbIVXgKKyV5zhqdNGMBKrvouk6
      jjnhuN4ikZRDMsRshHI+gOu66LqOaZonBys7joMS+JiORyaTlq2QERX1TfEyCyTeiswCneFF
      7/h69YBkfgl70sezx9QbLRbKi6QLi2TjUgcdZaqqoqrR/RmGEvlgbFI52qfeqFNaWiUeT5Lw
      +/RMuTuI2QptP0AhodAZOzSrBxSW1tBl76/4DghlABQLBcrrm5RzaXqDIY3KPraeo3XwiN4o
      uosoIvpkP4B4K7If4Ay+7+M4DrY1YTSxyeeyeH6Ahk+gqPgoGLIZONKiXu4SyhLss2c7FOby
      bDeOcIIM87EBWnqBlpPkxkp0p9BE9IXy9Rv4Dt3+kMVymW67Rb3ZCeOyQpwrnE3x5RXKpRJ4
      JlevXSGjmfh6knF1n07mMoVcKowwhDhl6kmwdIa72KJeChHKpnjf9/C8AF3XnrcGVQKe9wN9
      3h80AFRZF4gky7KIx6NbzBjKI9D9e3eIxZMoqo+rzHG5rHE8jHP09Ct+74c/pDXyubxaCiMU
      IV4S0hxkgOt5JyeJxDNF7N4excIiu/sVCsViOGEI8YpQBkAsmeX99z9gfalEo7JPvTOi3+6x
      fuMq3e6AfFJaoojZmHo5tLjYZCX4DFFfJRTnM00z0gchhhL5wd4244nNXLFIrTng5qUCPT9N
      v7qDpxpcvnIVQyoixAyEcz6A6bK2ukyleohr+jRbMHLaaLll9HEL5ElJzEgo37u+59Dpj9na
      vESxvEK7XkVPZBj1eyQ1m7E8JYkZCWVT/Gg8Jp1Kge8ysQN8Z4Qaz2IPW3RGLhtrK8g6WDRF
      fSV4qgPA933ZD3DBySzQGV5smO62alQbPba2NtjbfkZ2YZF8OkEykaA/HJKPcFeB77sXbW6i
      KpTIq40ON65u8fDhXZTEMu3GMdYohR44xIurYYQgxGuFkgR79piHj5+wtLLG4fZ9xo4KnsVh
      vUM6EQsjBCFeK5ST4ivVKivLy+BNqDRNArMHiRSLxRzVeo/11cVphyCmJOqNsSQJFm9FkuAz
      eJ4npRAXnOM42LY96zDeWDib4h8/wPZheXmZ3b0DkqkMOcXl2HZJGEluXt0MIwwhTgklCZ6b
      y2E7Lt1Gi5WNy1jjIX7gEwC6JqXQYnZCuQM4rk9M8wmMBIc729iWSzGd4sr1y+SkL5CYoVBK
      IcTFFfVSiKneAXRdj/QqoTif4zgkk8lZh/HGpn4+AECjeki93WN1ZQlbSVJM+9y7s008l+Xm
      tS05HSbCXpwBEVXhnA/Q76InMqQ1h/7YwvdtRiMLczSRrQBipkIZAEvrWyxnPR7ttn/7Jwob
      W9eIKS6erJOJGQplADjmkGov4PqNTZxuld4oYNirkCuvoMskkJihqbdG9DxvWi8vvgOkFOIM
      vu/jui7Vw11GpkuxuEAml8W1LVKpFN1Om9xcETW6OdT3XtT7v4byALK4tIzrKWh2n/bQ4uDo
      CPB59vA+rcEkjBCEeK1QBsCLnWGKAns721RqTYaNfSZaksO9gzBCEOK1wlmlUlTS6RR6XOP6
      9UXGvRYDB37+43/IcbUaSghCvM5Uk2DXdSP9fCjOJ6UQZ724lEJceLZtn3T9jqJQPp2HO494
      tHPM9Y0VYgtrJMwWz+o9lpZWWC4VwghBiNcKZQCsbWwxsHXyaZ2hHxBPpcBtglQBiRkLeR02
      oHKwR29kk81laTXq4V5eiFeE0hWCIMALAlTAsm103cBzHYxYHFVWwSJNukKcwXEcmQW64GQW
      6BxBEHC0v029NeDy1hb1agUtmWE5n6DjaKTxyJQWQlqQEO9aEASRPgkolBxgde0S6Uwes9+k
      tL5F0h3SaE1odhq0W23kHiFmJdQkWNdUbNvBdn00FVaXF6gcN8MMQYiXhFQKoVEuz5PPpjnY
      28XIl1nIJFDSabaurGOEEoQQp019P4C0RrzYZD/AGTRNQ9M0mvUqE8sll5sjnUnjOs9b6cUT
      CSzTjPRS+vedrusYRnTv4aHkAOlUkkazy6RVpzOx2dnd4XB/D9dz2N07DCMEIV4rlAGQTKVJ
      plIYhnZyIuT6Yp773zwhX1oKIwQhXiukWSCFVDJBvrTA0bNH+EqMeH4Re9JnYS4dTghCvMZU
      k+CoL5KI80W9FGKqSbDrutIb9IKzbRvTNGcdxhsL5RFob2+PgIC9vT2+uPUJlmVxcFThs0/+
      Di8IuPW3v0a2xotZCGUhLKl6NGoVlOQ8+Vyfw6MqqApJA+r1Oj4GslogZiGUO8D80hL37j9j
      rZTGSGRRnRGOD7n5EvtPn7JQKoYRhhCnhHM+QBBgWhbxRALPdVGVAMdT0NTnq8WaqqIaRti7
      c8Q7IOXQZ724rqP99gikRIR7yItvJ5viz/Cid3yr1WJ+fp5WqwUE5DNJjutdGo0a+dISW+sr
      0wxDTNGLpmdRFUoS3G81SacNWj0L3+6RiRWwlTTZZIp1+fCLGQpl6K4sF7l16xvWLi0TBAGe
      46LqcjqkmL1QBkAsM8/q6hJJTaGQS7NXn7BWzjJfKkniK2ZK9gOItyL7Ac7g+/7JVKiuKdhu
      gKYABAzHJrlMCtv1iccMJhOTZCoprbIiJurlLqEkwbu7u8yn4xyNfFKKi2WNmZsrgj3h/kGd
      n7y/wcef3OWf/tFHYYQjxIlQHsHzcY3K2CdnQKAorC4t0Wo2sFyfbELj2UGD5ZVyGKEI8ZJQ
      BkChNI8zsUjHPNT4HKPxGF1T8VFZXCwzsRyyiVgYoQjxkpMk2HGcd167H/XnQ3G+8XhMKpWa
      dRhv7CQH8DzvnQ8ARVGIxeSb/SKzbTvSP+OTAfCinuO//pc/49K1D/nw9z/gd1mq+ubLT9mr
      tvjoj/+EfOLl3DrwHT69dZuf/uRH7B0csHlpjbtf3cZD49r7H5COS2PEqHIch2SE67xOffJa
      rTYbN1X+4s//Oz+9VuLWbo/jSp/15TSGBmgxjtsmibiBPqlzPPD5V//23zBo1zjuWJiTMfnE
      y1vkhq1j5rJpagObyXgMBJimRaBqyIZJMUunkuBcYYGtS6vgOTRabVzX4/1/9DMMfDbXl+h2
      +mQLC+BZ9EYWP/vZjzEUOO7bFGhzf/v41EUOqw08AmqH+zi2xXhikZsrUsqnGVuSI4jZObUS
      fLD7FNuPsVTK0ekNyeZy6EaSpOGzd1gjrw/55e0af/pHP0dzxjT7Jutry0wGHXoTn2wqQTb7
      cn24+dvmV6ZpMhp08ZQ4qmfhKgaLpSKKIstfURX1TfFySqR4KxduQ4w9GdEZmpRL83+vsgTP
      sbB9lWT8dHu8IAie1wIFPgdHVdZWV6lUjlheXmIwHNOuV1DjOS6tLSM3gWjyfT/S9V6vDACP
      //GLv+If/OgndFvH7FY6rJfz1Bot5vI5/vwX/4t//s/+lMnEJh7XqTW6rBd8tnsFPvr9zW+9
      iD3pUTmoUFxcpl0/QjUSDIcD/EBlMe5RbfVYWchP950K8RqvJMFjAjXPxqU1/uov/pKDh7f5
      5LMvUJNJ7jzeZXFpBfr73Nlp0m832Lv3G542zu8JU9k/IJnR2d2rki2WGbRrJ38Xj8fxveh+
      g4hoe+UOkGE+5/LZ53dY31hDSeTRPZdsOk0um2Vodhk4Gu/duE5v9wuKCyVSyTTqOQsh6fkV
      NksLNBsNVD1Fci5DY6JgdqocNkdsbW1M8S0K8e2mvh9AkuCL7cIlwe/Si/MBIMB1PTRdx7Et
      QMUwNDwvQNdUHNfDMGQ1OIosyyIej886jDd2aiHs8d3P+MX//ruT33ePd9g97r3VRTzH5K//
      +lf4QcDtLz/nyf071Cq7/Oqrx9jjHr/8m9+81esL8aZOfe0+229guy47937Dxw87/OTGPC3P
      597Hf8lQm+df/os/+Z0v0jzcYWEhw3alj+vaTJw4SUMlHdc5qDZZXCq9kzcjxO/qpTtA4I05
      Pq7jDtu0lRJFpc1evc+wfcREnQNn/EYX6TsaV67cgHGD0tIapUIW03JYWSzSGthkE9E9YkdE
      20tJcODZDK2ApO4zNh06nS6Liwv4gUa33SSTy5PL/v0THjkb4OKTUogznPQGFRdW1GeBQtkS
      Gfgut7++QxAEHFWOcO0hu9v7fP7Zp2zvV8IIQYjXCmUAjHsN4rpOa+wyGo0IfAf0FKVigbVV
      aY0oZieUAVCpNECD44MDXMdhNBigJ6I7dywujlBWn1YvXyWVSjEej1F8h0ZvwvpqFiunYUhv
      RDFDU02Co14qK84nrRHPcNI7PvCpVOssL5fZ3X7C2FYoL2RotHqsb14hm4xuV4HvO03T0PXo
      lrGE8gDimH2ePnmK6StsXt5C01VGQ4v33ntPPvxipv4vhjJ3Hlb4SM8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage of School Closures' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAYC0lEQVR4nO3d6XtU12HH8e+5d/YZbUiAQCAWGwcwO176xLFrJzhx7MZN2jf98/o0bZ8n
      m5M2dm2njkkCdgxGWAiQQGjfd82+3eX0xaA+MkFoljvrPZ839uNnuHM83N85557tCimlRFFc
      Sqt3ARSlnlQAFFdTAVBcTQVAcTUVAMXVVAAUV1MBUFxNBUBxNRUAxdVUABRXUwFQXE0FQHE1
      FQDF1VQAFFdTAVBczVPvAriFlBLbkli2jW3ZWJaNbUlsKUFKpARNgN+jgRAIIUCAEAKhCTRd
      Q+ha4b8rjlEBqJJc1iC6mSIeTROLZUjE0iQTWXJZg1zWJJc1yOcNTNPGtgth6PB7uNDXjtA1
      NE1D6AJN09C8Ot6gD4/fizfowxvy4Q36CHSE8EcCaLpqyMulAlABKSWGYRGPponHMqwuxVhe
      irGyFGVjLVmo5W2J/fifu9GDXnLtvmd/aKtVeNwy6F4PgY4Qoe4Iwa4wwY4QvogfX8ivWowi
      qACUoNCNsTEMi/mZDSbHV1heiLK5kSQey2DkzRoUolAOiQQLLMMin84RX9wEQPPq+NsCBNqC
      tPV20tbbSWhPuNBKbHWtlP8n1J7g3ZmmxcpijLnpNSbGlpmdWiedyjn+PXuCXl4+1OH8dTuD
      HN4bwdPbhd7bhegIITTVbQLVAjyVlBIjbxHdTDE9scLw0Bxrq3HSyVxRXZlG401lsaIx7LEF
      RCiA1hXGc7wX7cAeRDiAeNw6uJEKwHYScjmDsYeLPLg3z/joEpl0vt6lqogmoMOnI/IURpuS
      GaxkBmt2DdEWRD+4B/25g+gHuhAevd7FrTkVAMCybJYXoowOzzM4MEUynsWy7HoXyxG6EPhy
      T++uyUQG8+E85tgioi2I99Rh9MN7ER1hhOaOFsG1zwBSSizLZnUpzsCNccYeLBKLputapmo8
      A/REfBxIJIv7sADREUY/vBfvi/2ISLDQPWphrmwBTNNifmadG9ce8ejBAqbZGrX904QNo/gP
      S5DRFGY0hflwDs9zB/CcOozW3d6yLYKrAmAYFssLm3x1bZTJsZWqjOQ0Er9Xw29b5f3hvIk5
      Mos1vYJ+vBfjRB+hnja0Fhs9ckUApJREN9PcuPaQodvTTf9gWyyflPiorHWT6RyxezP8aWCO
      g2cOcenV5wiF/Q6VsP5aPgDxWIb7gzNcvzrS8jX+k9q8OiJd+f/zaB4ezG3yYC7K4K0pXv/+
      ab7z4kECwV1mrZtAywbAMi1mp9e5+uld5mc2WmZUpxRtWoXjGxJSusadjTSFoRLJ+mqCj357
      i4fDB3jtzZMcOLQHrYmfD1ouAFJKYtE0N66NMvDVOIZRZh+4yfl9OnoqW9E1bAFDKZuN9Lcf
      pI28xcjdOcZHl3jzh2e48NIxgqHmbA1aKgCmYTEzucon/z3I+mq8KWdtndLu1dAqfNSJI7i7
      mdnxd8znTP748RDjD5d460dnONDX1XQrU1smAPm8yRdXR/j6yzHXPOTuRAjw5w1EBVM8NjCU
      sYnv8ltaps346BIryzFe//4pLrx8HK+3eWaUmz4AUkoW5zf5w+8HmZlcw6Xzet/i1TTaPBIq
      qAeWpMbIRqrozydiGT7572+YHFvhR+9fpL0j2BQrT5s6ALZtMzq8wNVP77GyFKt3cRqGF4me
      K2EC7AkSGEpbJDKlXcO2JCN358ik8/zg3XMcbIIH5ObqsG2TyxncuP6IX//HX9XN/4SukBdR
      wajXsqYzslzk8omnmBpf4Rf/ep2h21NYDT7L3nQtgJSSdCrH55/cZWhguuF/4FoTAgI7LH4r
      Rg7B1+s5rAoHEJKJLB//9jaxzTSvvn6CQKAxR4margVIJXN8+JtbDH49iWm6c4jzWUJ+D94K
      av8FWzARd2bCMJ83uX51hM8+GsJq0L+rpmoBFuc2+OiDAeZnN+pdlIYVsG10u7wA5IXgxkbO
      0bkT07AY+GqcVDLLj35ykc49Yceu7YSmCICUhRnI3/3ipurvP4MAIrpA5ErvvkhgLCdZTlRn
      ucjD+/MYhsW7P7tM155ww4wQNUUXaG56nV/+25fq5t+FACKyvNo/C9yK5TGqtGREShh/uMRv
      //MropvFD69WW0MHQErJ7NQa//XLm6wuq5t/N+GgFy1Teg0ugQemxkqssqUTxZibWef3v7rF
      2kq86t9VjIYOwPpqgt//+mvWVxP1LkpTaNfL61bEhcbd9YzDpdnZ5NgyH/7mVkOszm3YACzO
      bfCrn3/J6nJj1BSNTtcF/kx5NfhQ2mKlSn3/nUxPrPKrn39BdKP8+QYnNFwApJQkE1k+/GBA
      9flLENA1AmW0AHFN5+5a7Wr/7aYnVvnjx3fJZvJ1W8LScAFIp3J89MEtFtRQZ0n80kbPl7Z0
      wRKC2wmTdK4GJ9o9hZQwPDTL55/crdt+jYYKQC5n8PkndxkdXqh3UZpOV8BTeJotwYoFw5v1
      qf232Lbk9o0Jbn7xCLMOezcaJgC2bXP7xgRDA9OuXsdfDk0IfCVufZTAYMoina1P7b+dZdlc
      /3yEB/fna/7dDREAKSWjwwv88eMhtbyhDB0hL5pV/O8mgSlbY2yjvrX/dpl0no8+GGBhbqOm
      zwMNEYDF+U2ufnpPLWwrU8AobfOLCdxJGOQabLtoNpPnj/8zRDxWu2DWPQD5vMkffj+oRnzK
      5NE1wpqglPGfOakzvtY4s7HbTTxa5ourIzXrCdQ1AKZh8cXVEWYm1+pZjKbmQRKwiu/Hp4Xg
      5lqGRt44d2dgim9uTtTkWbBuAZBSMjO1ytdfjqltjBWI+HREsS/mkDCZh8VkY++ZzudM/vzZ
      MJvryarfG3ULQCya5pP/GnT9BvZKtYvib5CspvHX9SxmE5yRlEpk+cOHg2Qz1b0/6hIAy7S4
      cW2U9VW1zKESPq+ON1fcDWIDw1mbWAOsvynWxKNlhr6ZqWorUJcAzE6vM/DVuBrvr1BIF0Vv
      6IhLweBmrqH7/k8yDYvrnw+zsVa9xZA1D0A8luHqp3dde2Kbk4K2hShitEQCd3OSjWTz1P5b
      kvEsn396r2pdoZoGQErJ/cEZ5mfUOp9KCR6/+miXz0lgQ+g8qOFyZ6eNDi8wNbFala5QTQMQ
      3Uxz/eqIKw+qdZrXo+Et4uxPG7gVzxMr8YyfRmIaFtc+G67K/oGaBcAwLG5ce9gQmyBaQWfQ
      A0Vsfl9H5+FG9Xd6VdvyUpSh29NIh58baxaA5YXC/4BSOSEgkN29T2wIwa14nnwLPG9Zps2N
      a6OkHK5AaxIA07T46tpDNebvEL9XJ1TE2ocZA8ajzV/7b9k69t7JLnTVAyClZH56ncmxlWp/
      lWt4LRuP+ezZXxv4JmGQyzd/7b/dyL05R4dFqx4Ay7K5cf2R6vs7qDPoeebZnxIYtTVm67zZ
      pRrWVxMMDTjXla56AFaX4jx6oHZ4OSm0y+K3NII7m5Wf79mohm5PkXBoyXRVA2BZNgM3xlv6
      Pby1Fgp40HeZFJo0BXMt1Pd/UiKR5c7tKUdWElQ1AMsLUcYeLFbzK1wnIp79l5YQGrdWUy29
      wlbakju3pkjE0hVfq3oBkDA6PE8sWnkhlQJNCAKWtePuLwmMZCw2MvXf51tt66txZqYr30dS
      tQDkcgaDA1PVurwreTSIPOP1W0mhMbCRdcUiQylh8OZkxSdJVCUAUkrGHi6SjLduP7Qe/LrY
      sf9vAYNpi1S6eZc8lGp5Mcr8bGWb6KsSACNv8eDevFrz47Auv4ed1jOv2YKRFljyUIpUMsfo
      yEJFS7yrEoDoZoqJR8vVuLRraZrAl376DS6B22mLeBMveCvX3dvT5Ct4IWBVAjA9saImvhwW
      8un4nrL8QQJLwsPYujsHGxLxTEXL6x0PgGlaDA/NOX1Z1wtYFvpTNr8YCL7ezJIz3NvdHL47
      i13ma6EcD8DKYow1tdfXcR0+/an9/3kLJjbd1fd/0sLcRtmHaTkaACkls9NrpJtw610jE0DQ
      +Nt+bl7TGIjmm+KUh2paW0mU/cYZRwNgWzaTY8uuGIeupc6ID/HEg54ERrM28zV+sUUjMg2L
      0ZHy1ps5GgDDsJidWnfykgoQfkr/1pBwO57HUOusAJgcWynrOcDRAMzPbKjRH4d5PRqB/N/W
      /iOmYKWFF7yVKhHLsLZS+j4BxwIgpWRyXG16cZpPgP+J099iCO64bNJrN6ZhlTUr7FgADMNi
      eSHq1OWUx4KaQHvi7M+HeVhVAw3fYlk2S3MbJT9/OhaAeDTNZp3f+NeKurzfnv2KajoDS8mm
      OuGtVhbmN0s+QMu5AMQyNX2xgRt4PRqebcsfLAovtsi0wCkP1bC6HCdX4nIQxwKwuhTDKPaY
      bqUo7X4P+raqfg2Ne5tZVfvvIJc12Nws7cUfjgVgWb3hxXH+fB4e92lN4HbcJNMAL7VrZKW+
      acixAKwsqQdgJ3l0QcSrISgMey5Ygomo6mLuZrUeAchlDTbW1AOwk7yA//Hsrw3cTJhkWuyM
      n2pYXY5jlfB+MUcCEN1Mqc0vDmsPesC0kMCs0JnZcOdy51JlMnkSieLnSBwJQDyaVut/HBY2
      Cn39rBB8vZpRv2+RcjmDZLz4rqIjAYjFMtiqBXBM0Kfje9yMj+Ukc3E16VUsI2+VdAZtxQGQ
      UpKIqRbASX4kHiQ5TeObFj7hrRpMwyJTwlxAxQGwLUmyhD6Xsrs2HaRpMZSxWUupE7VLYVk2
      6WS26DVBFQfAsm1yWfdtxq6mNg2SUnB3M6da1jIkkzV8CLYtm5yanHFMwOdBS2Wb9qV2jSAR
      yxQ9W155C2CpFsBJnT6NVakx3MQvtau3bNagMH24O0eeAfJ5FQAnaJrAn81zL20TU5VK2UzT
      Kvb+dyAAUqrjzx3i92ikvR4GlxJF/wUqf8vIW0X/fJXPA0hZ9pksyrfZls3gSko9+FbILGEp
      hKfSL5Oy0A1SKreWNdlQ630qVsqJ0ZUHAImtFqg7Qp3w4AyrhN+x4i6QQKCJIt7ZqSg1ounF
      34+VB0CAptfsfduKsivd84y3iDzBgQAI9BISpyjVppdQIVceAE2g68UnTlGqzeutYQugaRr+
      QMXP0orimGDIR7GPpRUHQNcFfr+30ssoimMCQR+FM7V350AANPxBFQClcYTD/tq1AJquEVAt
      gNJAgiFf0Z914BlAEG4LVHoZRXGEpgkiJdyPjgyDdnSG1FyA0hB8fg/hSABRZB/Ikbu2rSOI
      pqm5AKX+vD4PwbC/6M87EoDOrjC6CoDSAPw+T227QAAdXSE8XjUXoNRfIOQjHKlxC+D1etjT
      E3HiUopSkZ69bXhquRZoS+/BTqcupShl23+wq6TPOxaAffs7nLqUopRt3/72kj7vWAD27m/H
      H1ATYkr9hCN+ukrsijsWgLbOEB2dIacupygl27u/g0CJlbBzAWgP0tkVdupyilKyfb0d+Epc
      luNYADwejb7+PU5dTlFKousaBw51lTwh61gAhBAcOb7PqcspSkm8Pp2+w91FL4HY4ugCnt6+
      Ttrag05eUlGK0tXdRs++tpL/nKMB8Hh0jj6318lLKkpRnn+ht+TaHxwOgKYJ+o/tLelYCkWp
      lMer03+sp6w/62gACs8Be2lrU90gpXb29Xawr7e8iVjHF/Hv6WkruzCKUo5D/d1E2svblOV4
      AHRd4/T5w05fVlF2dOZCP5pW3q1clW1ch4/0qFlhpSa697axv4KFmFUJQHtniKPPqTkBpfpO
      nzuMt4Tlz0+qSgA8Ho2zl47g8ah9wkr1tLUHOXmmr9gjgJ6qKneoEIXh0M49apOMUj29fZ3s
      6+0oa/x/S9WqaK9X5+LLx4o+oEhRSiGE4OLLx0va/fU0Ve2jnDh1kO69pU9PK8puDh3Zw+Gj
      5U1+bVfVAHTvjfD8dw5U8ysUF9I0welz/SVtft/xWg6UZ+eLaxovf/cEfr86MUJxTntniPOX
      j1bU999S9WGajq4Qp8/3V/trFJcQAi68dKyk8z+fpeoB0HWNl/7uuZIOK1KUnezd38HZS0cc
      u15NBup7+zo5dfZQLb5KaXEXXznm6NbbmgRA0zQuvnJctQJKRTq6wpy9eMTRc2hrNlW7v7eD
      l7/7vJoXUMri9er8/ZXThEo4+LYYNQuApmtcevU5dXKEUpa+/m5Onj3kyMjPdjVdrBNpC/Da
      W6fUGiGlJD6fh+99/xTBoDMjP9vV/E48fe6wmhxTiiYEnH/pKP0OzPo+Tc0DEAz5eP3KaXxq
      ckwpQlt7kNfePIXXV537pS59kd6DXbz+g9MlvdFbcR+fz8OVd8/T3lm9PeZ1uQM1TXDx5WMc
      OtJdj69XmsTJM32cOH3Q8Qff7epWBYcjAX7w43PqIC3lqfZ0R3jrnbMlH3Zbqrr2Qfr69/DG
      2y+qc4SUbwmGfFx573xN9pXXNQCapnHh8lE1KqR8y7lLR3jhVHW7Plvq/hTq8er8+B8vObK5
      QWl+J88c4o23X0Sv0VxR3QMAhSXTV94958gGB6V5dXVHuPLeuapMeO2kIQIghODQkR5+8ONz
      +Ko03qs0tnDEzzvvX6C7p60mXZ8tDREAKAyNnrt8lO+++R21VMJlvD6dt987z/Mna/8s2FB3
      mq5rvPq9Fzhz0bkND0pj03WNV147UdHxhpVoqAAABII+3vvZZU6cPKCWTrc4IQSXXj3OWz88
      g17h8SblargAQGFk6J2fXuK5F3rrXRSlSoSAc5eP8MaVF+t280ODBgAKM4Hv/dNLarlEi3r+
      5EHeef9i3XcJNmwAoDA8+tN/eZX+Y+q1S63kxfOH+Yd/vkyghsOdO2noAAgh6O5p492fqYmy
      ViBE4bTAH/7kAu0djXF8vpBSynoXohipZI5f//sXTE+s0hwlVrYTQnDu8hHeef9iQ9T8W5om
      AACb60k+++gOD+7PY9tNU2zX03WNS68e540rL9a9z/+kpgoAQCad47P/GWLw1iS21VRFdyWv
      T+eV107UdajzWZouAFJKLNPmr395yJd/fkA2Y9S7SMoOwhE/b793njMX+hvy5ocmDMAWw7B4
      eH+Ojz4YUCFoQHu6I/zo/Ys8f7K3LjO8xWraAGyZn13nfz+8w/TEar2Lojx28swhrrx3ju6e
      xn83RNMHQEpJdDPFX/73PveH5jDyZr2L5FrBkI9zl47wxtsvEgz6arqqs1xNH4AtpmFx++YE
      1z8fIRHP1Ls4rrOnO8KV987zwqmDNdvM4oSWCQCAbUs21xN8/LtvmJpYwTLtehep5fl8Hk6e
      6eOtd87S0Rlqilp/u5YKABS6ROlUjjsD03z5pwekktl6F6klCVE4tOrKu+c5cfpg1U9vqJaW
      C8AWKSXrqwmufnqP0eEFTNOqd5Fahs/n4fxLR3ntzVO0dwabrtbfrmUDsCWbyTM1vsKfP7vP
      6lIcy1LdonJ5vTp9/d187/un6D/aU7XjCmup5QMAhdYglcgyODDFjWujJBOqW1Sqjq4wf3/l
      NCfPHqrppvVqc0UAtth2IQg3v3zE8NAsG2vJehepoQlReCfXxVeOc/ZiP6Gwv6m7O0/jqgBs
      sSyb9dUEt29OcH9whlQyhwt/hh1pmqC9M8SFl45x9tIROrvCjr6WqJG4MgDbxTZTDH0zw71v
      plldjrl6qXXheJpuTp87zPnLRx17FWkjc30AoNA1SsQzTI2vMPj1JCtLMdKpXL2LVTNt7UF6
      +zq5+PJxDh/tIRxpva7OTlQAtpNgGCbzsxuMDi9wb3CmpWeVu/e2cfrcYU6e6WNfbweeBl2x
      WU0qAE8hpURKyOdN5mfWuX9nhvmZDdZXE009jOrx6uzr7eBQfzdnLvSz/2AnXo8OAtfU+E9S
      ASiCZdnEomnWlmOMjy4zNb5CLJrGMMyG3pSj6xpen05XdxvPv9BL/7Ee9vV2EGkPNPQS5VpS
      ASiDbdusLMaYm1lneSHK0mKUtZUE2Uy+3kUjHPGzd38H+3o7OHCoi77D3fTsq+15m81EBaAC
      UkpsW5LN5MllDdbXEqwsxlhZirG2kiCXNcjnDfJ5CyNvOrKPWdMEPr8Hr8+D3+chEPLRs7eN
      /Qe72Le/na6eCIGAF5/fi6YJdePvQgWgSoy8STKZJZXMkU7mSKdyJOIZMuk8mXSOdDpPNpPH
      NGwsy8a0LGxLousC3aMXui9enWDIRyDoIxz2Ewz5iLQFCEcCBMP+x//ud+XDq1NUAGpk+89c
      +FdZ1JxDoQIX3zonVdXqzlEBUFxNDQUorqYCoLiaCoDiaioAiqupACiupgKguJoKgOJqKgCK
      q/0fPbz2lIgdVGoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Providing Neccessary Materials to Students' width='192'>
      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
      46k7+YiSiwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Safety of Reopening Schools' width='192'>
      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
      LjRCAQQXmv8PSNXJCyCBy34AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Safety of Reopening Schools - Bar' width='142'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vaccine Prioritization to Teachers' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
